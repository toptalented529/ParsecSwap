{"version":3,"sources":["config/localization/languages.ts","config/index.ts","components/QuestionHelper/index.tsx","state/predictions/index.ts","config/constants/campaigns.ts","state/achievements/index.ts","config/constants/lottery.ts","state/lottery/helpers.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","hooks/usePairs.ts","components/Card/index.tsx","hooks/useDebounce.ts","config/constants/nfts.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","state/swap/hooks.ts","hooks/useParsedQueryString.ts","state/transactions/actions.ts","state/transactions/hooks.tsx","utils/isZero.ts","utils/currencyId.ts","state/application/hooks.ts","utils/uriToHttp.ts","state/user/hooks/helpers.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","config/constants/farms.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","hooks/useToast.ts","hooks/useTheme.ts","hooks/useAuth.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","utils/web3React.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","utils/addressHelpers.ts","components/Loader/Dots.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","hooks/useActiveWeb3React.ts","hooks/useTotalSupply.ts","state/user/hooks/useUserAddedTokens.ts","state/mint/actions.ts","state/teams/helpers.ts","config/constants/teams.ts","state/farms/hooks.ts","components/ConnectWalletButton.tsx","utils/apr.ts","components/Menu/SubNav.tsx","components/Settings/index.tsx","views/Page.tsx","state/block/index.ts","state/profile/hooks.ts","config/constants/ifo.ts","utils/collectibles.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","components/Layout/Row.tsx","state/application/actions.ts","config/abi/erc20.ts","state/swap/actions.ts","utils/contenthashToUri.ts","utils/wallet.ts","views/Pools/helpers.tsx","contexts/RefreshContext.tsx","components/Logo/Logo.tsx","components/Loader/CircleLoader.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","components/Layout/Column.tsx","hooks/useRefresh.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","state/burn/actions.ts","config/constants/index.ts","utils/compoundApyHelpers.ts","components/UnsupportedCurrencyFooter.tsx","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","utils/bigNumber.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/teams/index.tsx","utils/farmHelpers.ts","components/PositionCard/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","utils/index.ts","state/collectibles/index.ts","hooks/usePreviousValue.ts","utils/contractHelpers.ts","utils/multicall.ts","state/pools/helpers.ts","state/farmPools/helpers.ts","state/block/hooks.ts","components/Loader/PageLoader.tsx","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","state/farmPools/fetchPools.ts","state/farmPools/fetchPoolsUser.ts","state/farmPools/fetchVaultPublic.ts","state/farmPools/fetchVaultUser.ts","state/farmPools/index.ts","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/Settings/SlippageToleranceSetting.tsx","components/Settings/AudioSetting.tsx","components/Settings/SettingsModal.tsx","config/constants/types.ts","config/constants/tokens.ts","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","state/multicall/hooks.ts","utils/wrappedCurrency.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/types.ts","config/constants/multicall/index.ts","hooks/useContract.ts","state/user/hooks/index.tsx","config/constants/lists.ts","state/lists/hooks.ts","state/user/actions.ts","state/lists/actions.ts","state/multicall/actions.ts","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","hooks/useEagerConnect.ts","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","style/Global.tsx","App.tsx","Providers.tsx","index.tsx","config/constants/contracts.ts","state/predictions/helpers.ts","state/predictions/queries.ts","utils/prices.ts","utils/formatBalance.ts","config/constants/pools.ts","config/constants/farmpools.ts","state/wallet/hooks.ts","config/constants/endpoints.ts","utils/providers.ts"],"names":["EN","locale","language","code","languages","languageList","Object","values","BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","BASE_BSC_SCAN_URLS","ChainId","MAINNET","TESTNET","COLA_PER_BLOCK","BLOCKS_PER_YEAR","COLA_PER_YEAR","times","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","BIG_TEN","pow","DEFAULT_GAS_LIMIT","QuestionWrapper","styled","div","QuestionHelper","text","props","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","color","width","initialState","status","PredictionStatus","INITIAL","isLoading","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","HistoryFilter","ALL","currentEpoch","currentRoundStartBlockNumber","intervalBlocks","bufferBlocks","minBetAmount","rewardRate","lastOraclePrice","BIG_ZERO","toJSON","rounds","history","ledgers","claimableStatuses","initializePredictions","createAsyncThunk","account","getPredictionData","marketData","epochs","range","getRoundsData","roundsResponse","initialRoundData","reduce","accum","roundResponse","reduxNodeRound","serializePredictionsRoundsResponse","epoch","toString","initializedData","getLedgerData","ledgerResponses","getClaimStatuses","merge","makeLedgerData","fetchRound","predictionContract","getPredictionsContract","response","fetchRounds","round","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","claimed","getBetHistory","user","toLowerCase","bets","map","transformBetResponse","predictionsSlice","createSlice","name","reducers","setPredictionStatus","state","action","payload","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","findIndex","bet","id","extraReducers","builder","addCase","fulfilled","newestRound","maxBy","futureRound","makeFutureRoundResponse","startBlock","futureRounds","i","push","makeRoundData","pending","rejected","actions","campaigns","type","title","badge","description","campaignMap","Map","forEach","campaign","set","achievementSlice","data","addAchievement","addAchievements","setAchievements","clearAchievements","TICKET_LIMIT_PER_REQUEST","lotteryContract","getLotteryV2Contract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","keys","LotteryStatus","serializedCakePerBracket","cakeInBracket","ethersToSerializedBigNumber","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","PENDING","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","calls","address","getLotteryV2Address","params","multicallv2","lotteryV2Abi","requireSuccess","multicallRes","processedResponses","res","index","console","error","call","fetchCurrentLotteryIdAndMaxBuy","method","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","parseInt","roundIds","roundId","hasRoundBeenClaimed","tickets","filter","ticket","length","applyNodeDataToLotteriesGraphResponse","nodeData","graphResponse","nodeRound","ticketPrice","totalTickets","totalUsers","winningTickets","graphRound","getGraphLotteries","request","GRAPH_API_LOTTERY","gql","lotteries","getLotteriesData","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","number","viewUserInfoForLotteryId","cursor","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","fetchUserTicketsForMultipleRounds","idsToCheck","ticketsForMultipleRounds","ticketsForRound","userTickets","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","ticketDataForRound","find","roundTickets","getGraphLotteryUser","blankUser","totalCake","userRes","lottery","getUserLotteryData","idsForTicketsNodeCall","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","createReducer","blockNumber","updateBlockNumber","chainId","Math","max","updateVersion","createAction","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","userExpertMode","userSingleHopOnly","userSlippageTolerance","INITIAL_ALLOWED_SLIPPAGE","userDeadline","DEFAULT_DEADLINE_FROM_NOW","tokens","pairs","timestamp","audioPlay","isDark","lastUpdateVersionTimestamp","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","updateUserSingleHopOnly","addSerializedToken","serializedToken","removeSerializedToken","addSerializedPair","serializedPair","token0","token1","removeSerializedPair","tokenAAddress","tokenBAddress","muteAudio","unmuteAudio","toggleTheme","now","addTransaction","transactions","from","hash","approval","summary","claim","Error","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","Field","INPUT","typedValue","currencyId","OUTPUT","replaceSwapState","recipient","field","inputCurrencyId","outputCurrencyId","selectCurrency","otherField","switchCurrencies","typeInput","setRecipient","CURRENCY_A","otherTypedValue","resetMintState","noLiquidity","NEW_LIST_STATE","current","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","concat","UNSUPPORTED_LIST_URLS","memo","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","requestId","url","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","includes","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","add","Set","newListOfListsSet","has","LIQUIDITY_PERCENT","callResults","addMulticallListeners","options","blocksPerFetch","listeners","callListeners","callKey","toCallKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","results","PERSISTED_KEYS","store","configureStore","devTools","process","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","pools","poolsReducer","farmPools","farmPoolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lotteryReducer","application","swap","mint","burn","multicall","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","dispatch","useAppDispatch","useDispatch","PairState","PAIR_INTERFACE","Interface","IUniswapV2PairABI","usePairs","currencies","useActiveWeb3React","useMemo","currencyA","currencyB","wrappedCurrency","pairAddresses","tokenA","tokenB","equals","Pair","getAddress","undefined","useMultipleContractSingleData","result","reserves","loading","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","EXISTS","TokenAmount","usePair","Card","Box","padding","border","borderRadius","theme","colors","background","LightCard","LightGreyCard","cardBorder","GreyCard","dropdown","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","IPFS_GATEWAY","nftSources","NftType","PANCAKE","identifierKey","MIXIE","MINT","Nfts","images","lg","md","sm","ipfs","sortOrder","identifier","variationId","video","webm","mp4","blur","getTokenLogoURL","StyledLogo","Logo","size","CurrencyLogo","currency","style","uriLocations","useHttpLocations","WrappedTokenInfo","logoURI","srcs","ETHER","Token","height","src","alt","symbol","useSwapState","useSelector","useSwapActionHandlers","onCurrencySelection","useCallback","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","parseUnits","decimals","JSBI","BigInt","CurrencyAmount","ether","debug","BAD_RECIPIENT_ADDRESSES","involvesAddress","trade","checksummedAddress","route","path","some","token","pair","liquidityToken","useDerivedSwapInfo","inputError","t","useTranslation","inputCurrency","useCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","useCurrencyBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","isAddress","indexOf","useUserSlippageTolerance","allowedSlippage","slippageAdjustedAmounts","computeSlippageAdjustedAmounts","balanceIn","amountIn","lessThan","parseCurrencyFromURLParameter","urlParam","valid","toUpperCase","ENS_NAME_REGEX","ADDRESS_REGEX","queryParametersToSwapState","parsedQs","test","validatedRecipient","exactAmount","isNaN","parseFloat","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parse","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","useTransactionAdder","useAllTransactions","useHasPendingApproval","tokenAddress","spender","allTransactions","isTransactionRecent","isZero","hexNumberString","useBlockNumber","uriToHttp","uri","split","match","serializeToken","deserializeToken","priceHelperLps","fetchFarm","farm","pid","lpAddresses","quoteToken","lpAddress","getMasterChefAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","tokenAmountTotal","quoteTokenAmountTotal","log","Number","tokenAmountMc","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","farmsConfig","userData","allowance","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","pids","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","lpSymbol","mos","wbnb","busd","Wrapper","Section","AutoColumn","ConfirmedIcon","ColumnCenter","ConfirmationPendingContent","pendingText","gap","justify","fontSize","bold","small","textAlign","TransactionSubmittedContent","onDismiss","currencyToAdd","library","strokeWidth","external","href","getZnxScanLink","provider","isMetaMask","variant","mt","onClick","registerToken","asset","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","message","justifyContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","substr","registrarContract","useENSRegistrarContract","resolverAddress","useSingleCallResult","resolverAddressResult","resolverContract","useENSResolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","ZERO_PERCENT","tradeType","currencyEquals","inputAmount","outputAmount","equalTo","executionPrice","raw","multiply","ONE_HUNDRED_PERCENT","useAllCommonPairs","bases","common","BASES_TO_CHECK_TRADES_AGAINST","additionalA","ADDITIONAL_BASES","additionalB","basePairs","flatMap","base","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","CUSTOM_BASES","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","useUserSingleHopOnly","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","BETTER_TRADE_LESS_HOPS_THRESHOLD","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","useUnsupportedTokens","tokenIn","tokenOut","useToast","toastContext","useContext","ToastsContext","useTheme","useThemeManager","StyledThemeContext","useAuth","useWeb3React","activate","deactivate","toastError","login","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","logout","profileClear","getItem","walletconnect","close","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","isActive","points","profileContract","getProfileContract","profileApi","REACT_APP_API_PROFILE","getUsername","fetch","ok","json","username","getProfile","hasRegistered","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","avatar","domain","secure","expires","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","addPoints","fetchProfile","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","ethers","providers","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","utils","hexlify","toUtf8Bytes","signPersonalMessage","getSigner","nodes","sample","parseENSAddress","ensAddress","ensPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","urls","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","inputs","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","Contract","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","then","catch","createContext","ToastsProvider","children","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","Provider","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","ToastListener","onRemove","StyledInput","input","failure","align","textSubtle","inputRegex","RegExp","Input","React","placeholder","rest","onChange","event","nextUserInput","target","replace","escapeRegExp","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","scale","StyledText","Text","StyledBalanceText","StyledChevronDownIcon","ChevronDownIcon","LabelRow","StyledNumericalInput","NumericalInput","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","useCurrencyBalance","translatedLabel","useModal","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","Row","display","amount","toSignificant","className","val","alignItems","currency0","currency1","margin","marginRight","slice","filterTokens","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","every","p","sp","startsWith","endsWith","useSortedTokensByQuery","searchQuery","symbolMatch","exactMatches","symbolSubtrings","trim","getColaAddress","cola","addresses","masterChef","getNftAddress","getExchangeNFTAddress","exchangeNFT","getNftTokenAddress","nftToken","getMulticallAddress","multiCall","getWbnbAddress","lotteryV2","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","getCakeVaultAddress","cakeVault","getPredictionsAddress","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction","Dots","span","AppHeaderContainer","Flex","StyledArrowBackIcon","ArrowBackIcon","StyledHeading","Heading","StyledFlex","StyledEmptyDiv","AppHeader","subtitle","helper","backTo","noConfig","mr","as","Link","hidden","BodyWrapper","AppBody","web3React","refEth","useRef","simpleRpcProvider","setprovider","useTotalSupply","contract","useTokenContract","totalSupply","useUserAddedTokens","serializedTokensMap","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","teamsList","staticTeam","users","toNumber","getTeams","teamsById","numberTeams","nbTeams","profileABI","teamData","onChainTeamData","textColor","usePollFarmsData","includeArchive","useRefresh","slowRefresh","farmToFetch","usePollCoreFarmData","fastRefresh","useFarms","useFarmFromPid","f","useFarmUser","useLpTokenPrice","farmTokenPriceInUsd","useBusdPriceFromPid","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","getBalanceAmount","usePriceColaBusd","colaBnbFarm","ConnectButton","ConnectWalletButton","onPresentConnectModal","useWalletModal","paddingRight","getPoolApr","stakingTokenPrice","rewardTokenPrice","totalStaked","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","apr","isFinite","getFarmApr","colaPriceUsd","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","toLocaleLowerCase","StyledNav","nav","Nav","pathname","location","activeIndex","StyledPageHeader","Settings","SettingsModal","onPresentSettings","StyledPage","Div","SDiv","Page","flexDirection","zIndex","marginTop","paddingLeft","flexGrow","blockSlice","currentBlock","initialBlock","setBlock","useFetchProfile","useProfile","hasProfile","ifos","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","getTokenUriData","getErc721Contract","tokenURI","uriDataResponse","uriData","useTransactionDeadline","ttl","blockTimestamp","useMulticallContract","useCurrentBlockTimestamp","RowBetween","AutoRow","RowFixed","ERC20_INTERFACE","ERC20_ABI","ERC20_BYTES32_ABI","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","ethereum","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","image","tokenAdded","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","getBalanceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","getDecimalAmount","cakeAsDisplayBalance","getFullDisplayBalance","RefreshContext","slow","fast","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","addEventListener","removeEventListener","useIsBrowserTabActive","interval","setInterval","prev","clearInterval","BAD_SRCS","refresh","onError","rotate","keyframes","StyledSVG","svg","stroke","primary","CircleLoader","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","ImportToken","handleCurrencySelect","confirmed","setConfirmed","addToken","useAddUserToken","inactiveTokenList","useCombinedInactiveList","list","substring","gridTemplateRows","gridGap","outline","startIcon","checked","userSelect","disabled","maxAmountSpend","currencyAmount","greaterThan","MIN_BNB","subtract","ens","resolvedContentHash","useENSContentHash","Column","LS_KEY","fetchLocale","getLanguageCodeFromLS","isFetching","currentLanguage","languageMap","translations","LanguageContext","LanguageProvider","codeFromStorage","setState","fetchInitialLocales","enLocale","get","currentLocale","prevState","setLanguage","setItem","translate","key","translatedText","interpolatedText","dataKey","templateKey","languageContext","ROUTER_ADDRESS","NFT_API_SERVER","WETH","COLA","BUSD","USDT","BTCB","UST","ETH","USDC","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","DAI","PINNED_PAIRS","WBNB","BIG_INT_ZERO","ONE_BIPS","Percent","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","exponentiate","BLOCKED_ADDRESSES","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","roundingDecimals","compoundFrequency","performanceFee","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","toFixed","getRoi","amountEarned","amountInvested","DetailsFooter","invertedContrast","UnsupportedModal","maxWidth","UnsupportedCurrencyFooter","onPresentModal","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","invert","StyledText1","StyledText2","StyledSpan","PoolPriceBar","assetA","assetB","StyledAddIcon","AddIcon","StyledContent","MessageContent","MessageHeader","StyledButton","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","expertMode","useIsExpertMode","dependentField","pairState","equal","balances","independentAmount","dependentAmount","wrappedIndependentAmount","wrappedCurrencyAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","deadline","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","useApproveCallback","approvalA","approveACallback","approvalB","approveBCallback","router","getRouterContract","parsedAmountA","parsedAmountB","calculateSlippageAmount","amountsMin","tokenBIsETH","estimate","estimateGas","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","gasLimit","calculateGasMargin","err","modalHeader","my","slippage","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","mb","toExact","ApprovalState","NOT_APPROVED","APPROVED","minWidth","showUnwrapped","ethersBn","ethersToBigNumber","fetchPoolsBlockLimits","poolsWithEnd","poolsConfig","sousId","callsStartBlock","poolConfig","contractAddress","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","endBlock","fetchPoolsTotalStaking","nonBnbPools","stakingToken","earningToken","invPools","bnbPool","callsNonBnbPools","callinvPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","invPoolABI","invPoolsTotalStaked","fetchPoolStakingLimit","sousContract","getSouschefV2Contract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","isFinished","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","fetchPoolsAllowance","allowances","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","fetchUserPendingRewards","pendingRewards","fetchPublicVaultData","cakeVaultAbi","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","pricePerFullShare","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","getCakeVaultContract","fetchVaultUser","userContractResponse","userShares","lastDepositedTime","lastUserActionTime","cakeAtLastUserAction","fees","fetchPoolsPublicDataAsync","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","earningTokenPrice","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","pendingReward","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","livePoolsData","livePoolData","userPoolData","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","FixedHeightRow","StyledCard","MinimalPositionCard","unwrappedToken","showMore","setShowMore","userPoolBalance","useTokenBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","FullPositionCard","role","fontWeight","backgroundColor","getProposals","first","skip","ProposalState","ACTIVE","SNAPSHOT_API","proposals","getProposal","proposal","getVotes","where","votes","getVoteVerificationStatuses","getBlockNumber","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","SNAPSHOT_VOTING_API","headers","body","JSON","stringify","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","VotingStateLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","IDLE","shortenAddress","chars","mul","basisPointsToPercent","num","divide","getContract","ABI","AddressZero","connectUnchecked","getProviderOrSigner","_","IZilionixxSwapRouterABI","string","isTokenOnList","defaultTokens","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","usePreviousValue","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","farmPoolsConfig","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","sousChefV2","getPointCenterIfoContract","getColaContract","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getMasterchefContract","getNftContract","nftAbi","getExchangeNftContract","nftExchangeAbi","getNftTokenContract","nftTokenAbi","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","multi","itf","calldata","encodeFunctionData","callStatic","aggregate","returnData","decodeFunctionResult","tryAggregate","transformUserData","transformPool","quoteTokenAddress","usePollBlockNumber","useInitialBlock","PageLoader","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","success","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","useIsUserAddedToken","useIsTokenActive","opacity","currencyKey","FixedContentRow","Balance","balance","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","useCombinedActiveList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","inactiveTokens","useAllInactiveTokens","showImport","itemKey","itemCount","itemSize","useTokenComparator","inverted","useAllTokenBalances","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","allTokens","useAllTokens","searchToken","useToken","searchTokenIsAdded","useAudioModeManager","tokenComparator","filteredTokens","sortedTokens","sort","filteredSortedTokens","play","inputRef","focus","handleInput","checksummedInput","scrollTo","handleEnter","e","useFoundOnInactiveList","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","useIsListActive","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","textTransform","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","useAllLists","useActiveListUrls","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","Footer","ManageTokens","userAddedTokens","removeToken","useRemoveUserAddedToken","handleRemoveAll","isAddressValid","isWarning","importToken","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","onBack","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","Option","Options","mediaQueries","predefinedValues","SlippageToleranceSettings","setUserslippageTolerance","setValue","setError","rawValue","predefinedValue","step","min","evt","inputValue","AudioSetting","useMatchBreakpoints","isSm","isXs","toggleSetAudioMode","defaultOnDismiss","SlippageToleranceSetting","PoolIds","PSC","projectLink","syrup","Parsec","usdt","busdInvLP","gmi","tlos","beta","stephero","pros","qbt","cvp","bscdefi","dai","btcb","ust","eth","usdc","kalm","hotcross","belt","watch","bry","wsote","helmet","ten","ditto","blink","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","ada","band","dot","eos","link","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","bttold","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","cart","light","rpg","mcb","lazio","arv","moni","xms","zoo","fina","dar","xwg","eternal","porto","kart","qi","sheesha","bcoin","quidd","santos","nabox","xcv","idia","tt","gmee","htd","dpt","thg","ccar","high","sdao","antex","bbt","woop","gm","aog","bath","insur","froyo","apx","prl","fuse","ertha","raca","gear","ach","btt","era","fight","loa","duet","gmt","bsw","tem","pex","yel","tinc","happy","wzrd","ceek","abnbc","ankr","gal","xcn","metis","MIX","peak","DoubleCurrencyLogo","StyledListLogo","ListLogo","useTokensFromMap","tokenMap","includeUserAdded","mapWithoutUrls","newMap","tokenMap_","activeTokensAddresses","useUnsupportedTokenList","activeTokens","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","arrayify","parseBytes32String","tokenContract","tokenContractBytes32","useBytes32TokenContract","tokenName","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","isBNB","isMethodArg","x","isValidMethodArgs","Array","isArray","xi","INVALID_RESULT","Infinity","useCallsData","serializedCallKeys","c","callKeys","parseCallKey","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","callData","useTokenAllowance","owner","amountToApprove","currentAllowance","pendingApproval","approvalState","UNKNOWN","approve","useExact","MaxUint256","estimatedGas","useApproveCallbackFromTrade","BetPosition","SnapshotCommand","ProposalType","MULTICALL_NETWORKS","useERC20","useERC721","useCake","useMasterchef","useNftContract","useExchangeNftContract","useNftTokenContract","useSousChef","useEasterNftContract","useCakeVaultContract","useContract","withSignerIfPossible","useWETHContract","WETH_ABI","ENS_ABI","ENS_PUBLIC_RESOLVER_ABI","usePairContract","pairAddress","MULTICALL_ABI","useExpertModeManager","toggleSetExpertMode","toggleThemeAction","newSingleHopOnly","serializePair","usePairAdder","toV2LiquidityToken","useTrackedTokenPairs","pinnedPairs","generatedPairs","savedSerializedPairs","userPairs","forChain","pairId","combinedList","keyed","sorted","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","tagId","combineMaps","map1","map2","useCombinedTokenMapFromUrls","currentUrl","assign","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","LOWER_HEX_REGEX","pcs","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","ms","random","CancelledError","RetryableError","multicallContract","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","icon","Menu","cakePriceUsd","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","SwapWarningTokens","backgroundAlt","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","css","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","priceImpact","warningSeverity","SwapModalFooterContainer","radii","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","computeTradePriceBreakdown","priceImpactWithoutFee","realizedLPFee","formatExecutionPrice","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","backgroundDisabled","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","stopPropagation","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","gradients","cardHeader","Label","StyledArrowDown","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","deposit","txReceipt","UNWRAP","withdraw","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","prompt","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","entries","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","GlobalStyle","createGlobalStyle","Earning","lazy","EarningWalletConnected","EarningPools","MarketPlace","NFTMyArtworks","MintArtworks","NFTMyArtworksNoWalletConnect","Launch","FarmAuction","Collectibles","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","NFTManage","Payment","Info","Global","exact","strict","iterations","ThemeProviderWrapper","dark","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById","masterChefV1","originalNFT","Result","numberOrNull","valueNum","betResponse","position","BULL","BEAR","claimedHash","totalBets","totalBNB","transformRoundResponse","positionResponse","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","GRAPH_API_PREDICTION","ledgerCalls","claimableCalls","claimableResponses","claimableResponse","claimable","gt","staticCalls","paused","PAUSED","LIVE","rewardBaseCalAmount","rewardAmount","oracleCalled","ledgerResponse","eq","serializePredictionsLedgerResponse","parseBigNumberObj","BASE_FEE","INPUT_FRACTION_AFTER_FEE","currentFee","priceImpactWithoutFeeFraction","numerator","denominator","quotient","pct","maximumAmountIn","minimumAmountOut","dividedBy","displayDecimals","formatNumber","minPrecision","maxPrecision","minimumFractionDigits","maximumFractionDigits","toLocaleString","CORE","harvest","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","anyLoading","callState","useTokenBalances","ethBalance","uncheckedAddresses","a","useBNBBalances","GRAPH_API_PROFILE","SNAPSHOT_BASE_URL","SNAPSHOT_HUB_API","RPC_URL","getRpcUrl","JsonRpcProvider"],"mappings":"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","file":"static/js/main.8449c9a6.chunk.js","sourcesContent":["import { Language } from 'parsec-swap-uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { ChainId } from 'parsec-swap-sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// COLA_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// COLA_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 19 (40 - Amount sent to burn pool)\nexport const COLA_PER_BLOCK = new BigNumber(0.0001)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const COLA_PER_YEAR = COLA_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://matchaswap.zilionixx.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 300000\nexport const DEFAULT_GAS_PRICE = 5\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from 'parsec-swap-uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  cursor: pointer;\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"text\" width=\"20px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 1339,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more reliable\n  const mergedResponse = graphResponse.map((graphRound, index) => {\n    const nodeRound = nodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          finalNumber: nodeRound.finalNumber.toString(),\n          startTime: nodeRound.startTime,\n          status: nodeRound.status,\n          id: graphRound.id,\n          ticketPrice: graphRound.ticketPrice,\n          totalTickets: graphRound.totalTickets,\n          totalUsers: graphRound.totalUsers,\n          winningTickets: graphRound.winningTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteries = async (): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries {\n          lotteries(first: 100, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: true,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@zilionixx/zilionixx-token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@zilionixx/zilionixx-token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport farmPoolsReducer from './farmPools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    farmPools: farmPoolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { TokenAmount, Pair, Currency } from 'parsec-swap-sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import styled from 'styled-components'\nimport { Box } from 'parsec-swap-uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => (theme.isDark ? 'rgba(255, 255, 255, 0.2)' : '#C2BD44')};\n  background-color: ${({ theme }) => (theme.isDark ? 'rgba(255, 255, 255, 0.1)' : '#FFFEE7')};\n  border-radius: 32px;\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      1339: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      1339: '',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MINT]: {\n    address: {\n      56: '0x20bff0610178B5d9Aca3dF62eFe35ad41Bf9E37B',\n      1339: '0xab6cEEaC2a56A51E2862AFF14BF81f5E1773a089',\n    },\n    identifierKey: 'FEATURED_ARTISTS',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her  Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","// const getTokenLogoURL = (address: string) =>\n//   `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nconst getTokenLogoURL = (address: string) => `/images/tokens/${address}.png`\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from 'parsec-swap-sdk'\nimport { ZilionixxIcon } from 'parsec-swap-uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <img width={size} height={size} src=\"/logo-parsec.png\"  style={style} alt=\"parsec\"/>\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from 'parsec-swap-sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'PSC' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'PSC') return 'PSC'\n    if (valid === false) return 'PSC'\n  }\n  return 'PSC' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from 'parsec-swap-sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { Currency, ETHER, Token } from 'parsec-swap-sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'PSC'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n  ","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      // return [`https${uri.substr(4)}`, uri]\n      return [uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { Token } from 'parsec-swap-sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","// import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  /** \n  {\n    pid: null,\n    lpSymbol: 'QSD-PSC LP',\n    lpAddresses: {\n      93: '',\n      90: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  }, */\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n    \n    // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n    const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n    \n    // Raw amount of token in the LP, including those not staked\n    const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n    const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n    console.log(\"111111111111111111111111111111111111111\",Number(quoteTokenAmountTotal))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfoMap',\n            params: [lpAddress],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'WBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'WBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/PSC farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - PSC, (pBTC - PSC)\n  // from the PSC - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'WBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    \n    console.log(\"33333333333333333333333\",Number(baseTokenPrice),Number(quoteTokenPrice),quoteTokenFarm)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpAddress = getAddress(farm.lpAddresses)\n    return {\n      address: masterChefAddress,\n      name: 'poolUserInfoMap',\n      params: [lpAddress, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpAddress = getAddress(farm.lpAddresses)\n    return {\n      address: masterChefAddress,\n      name: 'pendingGrimex',\n      params: [lpAddress, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 251,\n    lpSymbol: 'MOS-UNE LP',\n    lpAddresses: {\n      1339: '0x76F0459c28b3Cc4b2Dae8584A5595122Eef4998d',\n      56: '0x5BfC4278E4B24F1Da1a10f51c4800b5AAa43d1B4',\n    },\n    token: tokens.mos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'BUSD-UNE LP',\n    lpAddresses: {\n      1339: '0x1a2e1e69dfba5d0d6cb155Ea5b8fDdC86fA61D69',\n      56: '0xfE6619603569B172fbb7DcC18CF9DF6B0755FF89',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.busd,\n  },\n  // {\n  //   pid: 253,\n  //   lpSymbol: 'MOS-BUSD LP',\n  //   lpAddresses: {\n  //     1339: '0x1a2e1e69dfba5d0d6cb155Ea5b8fDdC86fA61D69',\n  //     56: '0xcb4A7e8fbb0a293D8c889671A8695CA148535c6b',\n  //   },\n  //   token: tokens.mos,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 254,\n  //   lpSymbol: 'USDT-PSC LP',\n  //   lpAddresses: {\n  //     1339: '0x1a2e1e69dfba5d0d6cb155Ea5b8fDdC86fA61D69',\n  //     56: '0x655A2C3b7a634dcBfDA9C7f2F805E6b7408435E7',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.wbnb,\n  // },\n]\n\nexport default farms\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from 'parsec-swap-sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from 'parsec-swap-uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getZnxScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getZnxScanLink(hash, 'transaction', chainId)}>\n              {t('view on ParsecScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"#141436\" onDismiss={handleDismiss} style = {{background:\"#141436\"}}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from 'parsec-swap-sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from 'parsec-swap-sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from 'parsec-swap-uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from 'parsec-swap-uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@zilionixx/zilionixx-token-lists'\nimport schema from '@zilionixx/zilionixx-token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from 'parsec-swap-sdk'\nimport { TokenList } from '@zilionixx/zilionixx-token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'parsec-swap-uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'parsec-swap-uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent; \n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from 'parsec-swap-sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from 'parsec-swap-uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 1rem;\n  background-color: transparent;\n  // background-color: ${({ theme }) => (theme.isDark ? '#030923' : '#85ce36')};\n  border-radius: 10px;\n`\nconst StyledText = styled(Text)`\n  color: ${({ theme }) => (theme.isDark ? '#D6D7E3' : '#19274B')};\n  font-style: normal;\n  font-weight: 600;\n  font-size: 15px;\n  line-height: 18px;\n`\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 10rem;\n  text-overflow: ellipsis;\n  color: ${({ theme }) => (theme.isDark ? '#D6D7E3' : '#19274B')};\n  font-size: 15px;\n  line-height: 18px;\n`\nconst StyledChevronDownIcon = styled(ChevronDownIcon)`\n  fill: white;\n`\n\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst StyledNumericalInput = styled(NumericalInput)`\n  font-size: 24px;\n  font-weight: 500;\n  color: ${({ theme }) => (theme.isDark ? 'white' : '#403832')};\n  ::placeholder {\n    color: #cccbd1;\n  }\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap; \n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  border: 1px solid ${({ theme }) => (theme.isDark ? '#33334B' : 'rgba(0, 0, 0, 0.3)')};\n  background:#030923;\n  height:10vw;\n  min-height:120px;\n  padding:2vw 0 1vw;\n\n  z-index: 1;\n` \nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  // background-color: ${({ theme }) => (theme.isDark ? '#35434b' : '#white')};\n  // box-shadow: ${({ theme }) => theme.shadows.inset};\n  // border: ${({ theme }) => (theme.isDark ? 'none' : '1px solid #ced4da')};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <StyledText>{translatedLabel}</StyledText>\n              {account && (\n                <StyledBalanceText onClick={onMax} style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(18) ?? '' })\n                    : ' -'}\n                </StyledBalanceText>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <StyledNumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\" style = {{color:\"white\"}}>\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <StyledText id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </StyledText>\n              ) : (\n                <StyledText id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('SELECT A TOKEN')}\n                </StyledText>\n              )}\n              {!disableCurrencySelect && <StyledChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from 'parsec-swap-sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { ChainId } from 'parsec-swap-sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\nimport { nftSources } from 'config/constants/nfts'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.TESTNET]\n}\n\nexport const getColaAddress = () => {\n  return getAddress(tokens.cola.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getNftAddress = () => {\n  return getAddress(nftSources.MINT.address)\n}\nexport const getExchangeNFTAddress = () => {\n  return getAddress(addresses.exchangeNFT)\n}\nexport const getNftTokenAddress = () => {\n  return getAddress(addresses.nftToken)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Flex,\n  Heading,\n  IconButton,\n  ArrowBackIcon,\n  Text,\n} from \"parsec-swap-uikit\";\nimport { Link } from \"react-router-dom\";\n// import Settings from './Settings'\n// import Transactions from './Transactions'\nimport QuestionHelper from \"../QuestionHelper\";\n\ninterface Props {\n  title: string;\n  subtitle?: string;\n  helper?: string;\n  backTo?: string;\n  noConfig?: boolean;\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  display: block;\n  // border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`;\nconst StyledArrowBackIcon = styled(ArrowBackIcon)`\n  width: 32px;\n  fill: ${({ theme }) => (theme.isDark ? \"#fff\" : \"#3a4651\")};\n`;\nconst StyledHeading = styled(Heading)`\n  font-weight: 500;\n  font-size: 20px;\n  color: ${({ theme }) => (theme.isDark ? \"#fff\" : \"#3a4651\")};\n`;\nconst StyledFlex = styled(Flex)`\n  justify-content: space-between;\n`;\nconst StyledEmptyDiv = styled.div`\n  width: 50px;\n`;\nconst AppHeader: React.FC<Props> = ({\n  title,\n  subtitle,\n  helper,\n  backTo,\n  noConfig = false,\n}) => {\n  return (\n    <AppHeaderContainer>\n      <StyledFlex alignItems=\"center\" mr={noConfig ? 0 : \"16px\"}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <StyledArrowBackIcon />\n          </IconButton>\n        )}\n        <StyledHeading as=\"h2\" ml=\"10px\">\n          {title}\n        </StyledHeading>\n        {helper ? (\n          <QuestionHelper text={helper} ml=\"75px\" />\n        ) : (\n          <StyledEmptyDiv />\n        )}\n        <Text color=\"textSubtle\" fontSize=\"14px\" hidden>\n          {subtitle}\n        </Text>\n      </StyledFlex>\n      {/* {!noConfig && (\n        <Flex>\n          <Settings />\n          <Transactions />\n        </Flex>\n      )} */}\n    </AppHeaderContainer>\n  );\n};\n\nexport default AppHeader;\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport const BodyWrapper = styled.div`\n  border-radius: 24px;\n  width: 100%;\n  z-index: 1;\n  background: transparent;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from 'parsec-swap-sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useMemo } from 'react'\nimport { ChainId, Token } from 'parsec-swap-sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-PSC LP\n * 252 = BUSD-PSC LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(252)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceColaBusd = (): BigNumber => {\n  const colaBnbFarm = useFarmFromPid(251)\n  return new BigNumber(colaBnbFarm.token.busdPrice)\n}\n","import React from 'react'\nimport { Button, useWalletModal } from 'parsec-swap-uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\n\nconst ConnectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  background-image: linear-gradient(to left, #991cd1,#d4307a);\n  color: white;\n  padding: 12px 0px;\n  width: 100%;\n  border-radius: 32px;\n  text-align: center;\n  border: 1px solid transparent;\n  font-weight: 500;\n  font-size: 17px;\n  line-height: 26px;\n  letter-spacing: 0.01em;\n  text-transform: none;\n  height: 3.3vw;\n  box-shadow: none;\n`\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <ConnectButton {...props} onClick={onPresentConnectModal}>\n      <img src=\"/wallet-2.png\" alt=\"wallet\" style ={{paddingRight:\"20px\"}} />{t('Connect to Wallet')}\n    </ConnectButton>\n  )\n}\n\nexport default ConnectWalletButton\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, COLA_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param colaPriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  colaPriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyColaRewardAllocation = COLA_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyColaRewardAllocation.times(colaPriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'parsec-swap-uikit'\n\nconst StyledNav = styled.nav`\n  margin-top: -2vw;\n  margin-bottom: 0px;\n  text-align: flex-start;\n  margin-left:2.5vw;\n`\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nexport default function Nav() {\n  const location = useLocation()\n\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"primary\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          Swap\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          Liquidity\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n","import React, { ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Heading,\r\n  IconButton,\r\n  Text,\r\n  Flex,\r\n  useModal,\r\n  TuneIcon,\r\n  HistoryIcon,\r\n} from \"parsec-swap-uikit\";\r\nimport SettingsModal from \"./SettingsModal\";\r\n\r\ninterface PageHeaderProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst StyledPageHeader = styled.div`\r\n  padding: 0 px;\r\n  background:#141436;\r\n\r\n`;\r\n\r\nconst StyledFlex = styled(Flex)`\r\n  justify-content: flex-end;\r\n  padding-right: 2vw;\r\n`;\r\n\r\nconst Details = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst Settings = ({ children }: PageHeaderProps) => {\r\n  const [onPresentSettings] = useModal(<SettingsModal />);\r\n\r\n  return (\r\n    <StyledPageHeader>\r\n      <StyledFlex alignItems=\"center\">\r\n        <IconButton variant=\"text\" onClick={onPresentSettings} title=\"Settings\">\r\n          <TuneIcon width=\"24px\" color=\"currentColor\" />\r\n        </IconButton>\r\n      </StyledFlex>\r\n      {children && <Text mt=\"16px\">{children}</Text>}\r\n    </StyledPageHeader>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Flex,Text } from \"parsec-swap-uikit\";\nimport SubNav from \"components/Menu/SubNav\";\nimport Settings from \"components/Settings\";\nimport { AlignJustify } from \"react-feather\";\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 41px 16px;\n  min-height: calc(100vh - 64px);\n  // background-color: ${({ theme }) => (theme.isDark ? \"#141c23\" : \"#cfcfcf\")};\n  background-size: 150%;\n  // background: black;\n  background: ${({ theme }) => (theme.isDark ? \"#030923\" : \"#E5E5E5\")};\n`;\nconst Div = styled.div`\n  position: relative;\n  max-width: 639px;\n  width: 100%;\n  background-color: ${({ theme }) => (theme.isDark ? \"#141436\" : \"#141436\")};\n  box-shadow: rgb(0 0 0 / 1%) 0px 0px 1px, rgb(0 0 0 / 4%) 0px 4px 8px,\n    rgb(0 0 0 / 4%) 0px 16px 24px, rgb(0 0 0 / 1%) 0px 24px 32px;\n  border-radius: 32px;\n  padding: 1rem;\n  padding-top: 30px;\n  // margin-top: 130px;\n  // margin-bottom: 100px;\n\n  // border: ${({ theme }) =>\n    theme.isDark ? \"1px solid white\" : \"1px solid #6c4b00\"};\n`;\nconst SDiv = styled.div`\ndisplay:flex;\nalign-items:center;\nflex-direction:row;\nwidth: 100%;\nmax-width:642px;\nheight: 102px;\nflex-grow: 0;\nmargin: 18px 0 0;\npadding: 2vw 2vw 2vw 2vw;\nobject-fit: contain;\nborder-radius: 32px;\n-webkit-backdrop-filter: blur(24px);\nbackdrop-filter: blur(24px);\nborder: solid 0.5px #fff;\nbackground-color: #312c47;\n`;\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({\n  children,\n  ...props\n}) => {\n  return (\n    <StyledPage {...props}>\n      <div style ={{display:\"flex\",flexDirection:\"row\"}}>\n       <Text fontSize=\"35px\" color=\"#fff\">Make a Swap with &nbsp;</Text> <Text fontSize=\"35px\" color=\"#d4307a\">Parsec</Text>\n       </div>\n       <Text fontSize=\"16px\" color=\"#d9d9d9\" style ={{margin:\"1vw 4vw 3vw 6vw\"}}>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</Text>\n      <Div>\n        <Settings>\n          <SubNav />\n          {children}\n        </Settings>\n      </Div>\n      <SDiv>  \n        <img src=\"/diamond.png\" alt=\"diamond\" style ={{zIndex:\"4\",width:\"105px\",height:\"107px\",marginTop:\"-30px\"}} />\n      <div style ={{display:\"flex\",flexDirection:\"row\", paddingLeft:\"65px\"}}>\n       <Text fontSize=\"20px\" color=\"#fff\">Lorem ipsum lorem &nbsp;</Text> <Text fontSize=\"20px\" color=\"#d4307a\">Parsec</Text>\n       </div>\n      </SDiv>\n      <Flex flexGrow={1} />\n    </StyledPage>\n  );\n};\n\nexport default Page;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","// import farms from './farms'\n// import { Ifo, Token } from './types'\nimport { Ifo } from './types'\n\n// const cakeBnbLpToken: Token = {\n//   symbol: farms[0].lpSymbol,\n//   address: farms[0].lpAddresses,\n//   decimals: 18,\n// }\n\nconst ifos: Ifo[] = []\n\nexport default ifos\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import styled from 'styled-components'\nimport { Box } from 'parsec-swap-uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n    z-index:3;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Parsec',\n            nativeCurrency: {\n              name: 'Parsec',\n              symbol: 'PARSEC',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React, { useState } from 'react'\nimport { HelpIcon } from 'parsec-swap-uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token, Currency } from 'parsec-swap-sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from 'parsec-swap-uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getZnxScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getZnxScanLink(token.address, 'address', chainId)} external>\n                  ({t('view on ParsecScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from 'parsec-swap-sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'inveswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from 'parsec-swap-uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ChainId, JSBI, Percent, Token, WETH } from 'parsec-swap-sdk'\nimport { BUSD, DAI, USDT, BTCB, COLA, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x8D5659C3D670A79627e41113726EFEF7bA4b4DEc'\nexport const NFT_API_SERVER = 'https://matcha-api.zilionixx.com'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], COLA[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], COLA[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET]],\n  [ChainId.TESTNET]: [BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], COLA[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [COLA[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much PSC so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 PSC\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as farmPoolsConfig } from './farmpools'\nexport { default as ifosConfig } from './ifo'\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import React from 'react'\nimport { Currency, Token } from 'parsec-swap-sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from 'parsec-swap-uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getZnxScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getZnxScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from 'parsec-swap-sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from 'parsec-swap-sdk'\nimport React from 'react'\nimport { Button, Text } from 'parsec-swap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\" variant=\"success\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Currency, Percent, Price } from 'parsec-swap-sdk'\nimport { Text } from 'parsec-swap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nconst StyledText1 = styled(Text)`\n  font-size: 12px;\n  font-weight: 500;\n  font-size: 26px;\n  line-height: 31px;\n  color: ${({ theme }) => (theme.isDark ? '#b9b9b9b3' : '#19274Bb3')};\n`\n\nconst StyledText2 = styled(Text)`\n  font-size: 12px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 19px;\n  color: ${({ theme }) => (theme.isDark ? '#b9b9b9b3' : '#19274Bb3')};\n`\n\nconst StyledSpan = styled.span`\n  width: 1px;\n  height: 21px;\n  background: #a1a5b1;\n`\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\">\n        <AutoColumn justify=\"center\">\n          <StyledText1>{price?.toSignificant(6) ?? '-'}</StyledText1>\n          <StyledText2 pt={4}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </StyledText2>\n        </AutoColumn>\n        <StyledSpan />\n        <AutoColumn justify=\"center\">\n          <StyledText1>{price?.invert()?.toSignificant(6) ?? '-'}</StyledText1>\n          <StyledText2 pt={4}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </StyledText2>\n        </AutoColumn>\n        <StyledSpan />\n        <AutoColumn justify=\"center\">\n          <StyledText1>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </StyledText1>\n          <StyledText2 pt={4}>{t('Share of Pool')}</StyledText2>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from 'parsec-swap-sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from 'parsec-swap-uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n// import { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nconst StyledAddIcon = styled(AddIcon)`\n  fill: #1fc7d4;\n  width: 30px;\n`\nconst StyledContent = styled.div`\n  margin: 30px 0px;\n`\nconst StyledText = styled(Text)`\n  color: ${({ theme }) => (theme.isDark ? '#D6D7E3' : '#19274B')};\n  margin-bottom: 30px;\n`\nconst MessageContent = styled(Text)`\n  color: ${({ theme }) => (theme.isDark ? '#D6D7E399' : '#19274B99')};\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 22px;\n`\nconst MessageHeader = styled(Text)`\n  color: ${({ theme }) => (theme.isDark ? '#D6D7E3' : '#19274B')};\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 18px;\n`\nconst StyledButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  background-image: linear-gradient(to left, #991cd1,#d4307a);\n  border-radius:32px;\n  color: white;\n  padding: 12px 0px;\n  width: 100%;\n  border-radius: 32px;\n  text-align: center;\n  border: 1px solid transparent;\n  font-weight: 500;\n  font-size: 17px;\n  line-height: 26px;\n  letter-spacing: 0.01em;\n  text-transform: none;\n  height: fit-content;\n  margin: 0px !important;\n  box-shadow: none;\n`\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  const onAdd = async () => {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n    let estimate: any\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit: any) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'PARSEC'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {/* {noLiquidity && ( */}\n            <ColumnCenter>\n              <Message variant=\"warning\">\n                <div>\n                  <MessageHeader bold mb=\"8px\">\n                    {t('You are the first liquidity provider.')}\n                  </MessageHeader>\n                  <MessageContent mb=\"8px\">\n                    {t('The ratio of tokens you add will set the price of this pool.')}\n                  </MessageContent>\n                  <MessageContent>{t('Once you are happy with the rate click supply to review.')}</MessageContent>\n                </div>\n              </Message>\n            </ColumnCenter>\n            {/* )} */}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <StyledAddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <StyledContent>\n                  <StyledText fontSize=\"15px\">\n                    {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                  </StyledText>\n                  <PoolPriceBar\n                    currencies={currencies}\n                    poolTokenPercentage={poolTokenPercentage}\n                    noLiquidity={noLiquidity}\n                    price={price}\n                  />\n                </StyledContent>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <StyledButton disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </StyledButton>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <StyledButton\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </StyledButton>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <StyledButton\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </StyledButton>\n                      )}\n                    </RowBetween>\n                  )}\n                <StyledButton\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </StyledButton>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          {!addIsUnsupported ? (\n            pair && !noLiquidity && pairState !== PairState.INVALID ? (\n              <AutoColumn style={{ minWidth: '20rem', width: '100%', margin: '2rem auto' }}>\n                <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n              </AutoColumn>\n            ) : null\n          ) : (\n            <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n          )}\n        </CardBody>\n      </AppBody>\n    </Page>\n  )\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport invPoolABI from 'config/abi/invPool.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'UNE' && !(p.earningToken.symbol === 'MOS' && p.stakingToken.symbol === 'MOS'))\n  const invPools = poolsConfig.filter((p) => p.earningToken.symbol === 'MOS' && p.stakingToken.symbol === 'MOS')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'UNE')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n  const callinvPools = invPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'getstakedAmount',\n      params: [],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  console.log(\"dog\")\n\n\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n  console.log(\"dog2\" , callinvPools)\n  const invPoolsTotalStaked = await multicall(invPoolABI, callinvPools)\n  console.log(\"dog3\")\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...invPools.map((p, index) => ({ \n      sousId: p.sousId,\n      totalStaked: new BigNumber(invPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'PSC' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\n// import { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// PSC pools use the native PSC token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'UNE')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'UNE')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\n// const masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non PSC pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // PSC pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  // const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances /* , 0: new BigNumber(masterPoolAmount.toString()).toJSON() */ }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  // const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards /* , 0: new BigNumber(pendingReward.toString()).toJSON() */ }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n\n  const totalStakings = await fetchPoolsTotalStaking()\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n    // const stakingTokenPrice = 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    // const earningTokenPrice = 1\n\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    // const apr = !isPoolFinished ? 100 - Math.round(Math.random() * 1000) / 1000 : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst COLA_STAKE_START_PID = 200\nconst COLA_STAKE_END_PID = 500\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\nexport const isEarnColaPid = (pid: number) => pid >= COLA_STAKE_START_PID && pid <= COLA_STAKE_END_PID\n\nexport default isArchivedPid\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from 'parsec-swap-sdk'\nimport { Button, Text, ChevronUpIcon, ChevronDownIcon, Card, CardBody, Flex, CardProps, AddIcon } from 'parsec-swap-uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\nconst StyledCard = styled(Card)`\n  background-color: ${({ theme }) => (theme.isDark ? '#141436' : '#141436')};\n  border-radius:22px!important;\n  box-shadow: 0 4px 30px 0 rgba(63, 111, 100, 0.08);\n  margin: 24px 0 19px 2px;\n  padding: 20px 39px 21px 37px;\n`\nconst StyledText = styled(Text)`\n  color: ${({ theme }) => (theme.isDark ? '#D6D7E399' : '#19274B99')};\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 22px;\n`\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <StyledCard>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"text\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"text\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"text\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"text\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </StyledCard>\n      ) : (\n        <LightCard>\n          <StyledText style={{ textAlign: 'left' }}>\n            \n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </StyledText>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <StyledCard style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"text\" fontWeight=\"bold\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"text\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"text\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"text\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n                style = {{backgroundColor:\"#d4307a\", border:\"0px\"}}\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </StyledCard>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IZilionixxSwapRouterABI } from 'inve-swap-periphery/build/IZilionixxSwapRouter.json'\n\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from 'parsec-swap-sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getZnxScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IZilionixxSwapRouterABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig, farmPoolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getColaAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getNftAddress,\n  getExchangeNFTAddress,\n  getNftTokenAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport nftAbi from 'config/abi/nftAbi.json'\nimport nftExchangeAbi from 'config/abi/nftExchangeAbi.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport nftTokenAbi from 'config/abi/nftTokenAbi.json'\nimport { ChainLinkOracleContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  let config = poolsConfig.find((pool) => pool.sousId === id)\n  if (!config) {\n    config = farmPoolsConfig.find((pool) => pool.sousId === id)\n  }\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  let config = poolsConfig.find((pool) => pool.sousId === id)\n  if (!config) {\n    config = farmPoolsConfig.find((pool) => pool.sousId === id)\n  }\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getColaContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getColaAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftAbi, getNftAddress(), signer)\n}\nexport const getExchangeNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftExchangeAbi, getExchangeNFTAddress(), signer)\n}\nexport const getNftTokenContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftTokenAbi, getNftTokenAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n    const multi = getMulticallContract()\n\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.callStatic.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    console.log(\"herehre\",error,calls)\n    throw new Error('error')\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import React from 'react'\nimport styled from 'styled-components'\n// import { Spinner } from 'parsec-swap-uikit'\nimport Page from '../Layout/Page'\n// import Spinner from '../../../public/images/spinner.gif'\n\n// const Wrapper = styled(Page)`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n// `\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: calc(100vh - 295px);\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      {/* <Spinner /> */}\n      <img src=\"/images/spinner.gif\" alt=\"icon\" width=\"256px\" height=\"256px\" />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from 'parsec-swap-sdk'\nimport { Text } from 'parsec-swap-uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  // border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  // border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    // background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  // background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>parsec</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from 'parsec-swap-sdk'\nimport { Button, Text, CheckmarkCircleIcon } from 'parsec-swap-uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from 'parsec-swap-sdk'\nimport { Text } from 'parsec-swap-uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n  color: ${({ theme }) => (theme.isDark ? '#b9b9b980' : '#19274b80')};\n  font-size: 19px;\n  line-height: 23px;\n`\nconst StyledText = styled(Text)`\n  color: ${({ theme }) => (theme.isDark ? '#D6D7E3e6' : '#19274be6')};\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n`\nconst StyledText1 = styled(Text)`\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 18px;\n  color: ${({ theme }) => (theme.isDark ? '#b9b9b966' : '#19274B66')};\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(18)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => (!disabled && theme.isDark ? '#31314a' : '#d8d8d9')};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <StyledText bold>{currency.symbol}</StyledText>\n        <StyledText1 color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </StyledText1>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height?: any\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    // let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from 'parsec-swap-sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Currency, ETHER, Token } from 'parsec-swap-sdk'\nimport { Text, Input, Box } from 'parsec-swap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\nconst StyledInput = styled(Input)`\n  position: relative;\n  display: flex;\n  padding: 16px;\n  -webkit-box-align: center;\n  align-items: center;\n  width: 100%;\n  white-space: nowrap;\n  background: ${({ theme }) => (theme.isDark ? '#030923' : 'white')};\n  outline: none;\n  border-radius: 7px;\n  color: #ee6c4d;\n  border: 1px solid ${({ theme }) => (theme.isDark ? 'rgba(0, 0, 0, 0.5)' : 'rgb(238, 217, 204)')};\n  appearance: none;\n  font-size: 15px;\n  transition: border 100ms ease 0s;\n  ::placeholder {\n    color: #b9b9b999;\n  }\n  &:focus:not(:disabled) {\n    box-shadow: none;\n  }\n`\nconst StyledText = styled.span`\n  color: ${({ theme }) => (theme.isDark ? '#98a7ab' : '#3a4651')};\n`\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div style ={{background:\"141436\"}}>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <StyledInput\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {/* <span>Token Name</span> */}\n          {showCommonBases ? (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          ) : (\n            <StyledText>Token Name</StyledText>\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -15px\">\n            <CurrencyList\n              height={300}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"text\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from 'parsec-swap-uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@zilionixx/zilionixx-token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\nconst StyledInput = styled(Input)`\n  position: relative;\n  display: flex;\n  padding: 16px;\n  -webkit-box-align: center;\n  align-items: center;\n  width: 100%;\n  white-space: nowrap;\n  background: ${({ theme }) => (theme.isDark ? '#030923' : 'white')};\n  outline: none;\n  border-radius: 7px;\n  color: #ee6c4d;\n  border: 0px solid ${({ theme }) => (theme.isDark ? 'rgba(0, 0, 0, 0.5)' : 'rgb(238, 217, 204)')};\n  appearance: none;\n  font-size: 15px;\n  transition: border 100ms ease 0s;\n  ::placeholder {\n    color: #b9b9b999;\n  }\n  &:focus:not(:disabled) {\n    box-shadow: none;\n    // border: 2px solid #ee6c4d;\n  }\n`\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <StyledInput\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from 'parsec-swap-sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from 'parsec-swap-uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getZnxScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nconst StyledInput = styled(Input)`\n  position: relative;\n  display: flex;\n  padding: 16px;\n  -webkit-box-align: center;\n  align-items: center;\n  width: 100%;\n  white-space: nowrap;\n  background: ${({ theme }) => (theme.isDark ? '#030923' : 'white')};\n  outline: none;\n  border-radius: 7px;\n  color: #ee6c4d;\n  border: 1px solid ${({ theme }) => (theme.isDark ? 'rgba(0, 0, 0, 0.5)' : 'rgb(238, 217, 204)')};\n  appearance: none;\n  font-size: 15px;\n  transition: border 100ms ease 0s;\n  ::placeholder {\n    color: #b9b9b999;\n  }\n  &:focus:not(:disabled) {\n    box-shadow: none;\n    // border: 2px solid #ee6c4d;\n  }\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getZnxScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getZnxScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <StyledInput\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from 'parsec-swap-sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from 'parsec-swap-uikit'\n// import styled from 'styled-components'\nimport { TokenList } from '@zilionixx/zilionixx-token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <ButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"primary\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </ButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from 'parsec-swap-uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@zilionixx/zilionixx-token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from 'parsec-swap-sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Button,\n  Heading,\n} from 'parsec-swap-uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@zilionixx/zilionixx-token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  width: 100%;\n  background:#141436;\n`\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: transparent;\n  text-align: center;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  width: 100%;\n  padding: 33px;\n  padding-top: 5px;\n  scroll-y: none;\n`\n\nconst StyledButton = styled(Button)`\n  background-image: linear-gradient(to left, #991cd1,#d4307a);\n  border-radius:32px;\n  color: white;\n  padding: 12px 0px;\n  width: 100%;\n  border-radius: 32px;\n  text-align: center;\n  border: 1px solid transparent;\n  font-weight: 500;\n  font-size: 17px;\n  line-height: 26px;\n  letter-spacing: 0.01em;\n  text-transform: none;\n  height: fit-content;\n  margin: 0px !important;\n  box-shadow: none;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading scale=\"lg\">{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <StyledButton\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </StyledButton>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/farmpools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'PSC')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'PSC')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'PSC' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/farmpools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\n// import { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// PSC pools use the native PSC token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'PSC')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'PSC')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\n// const masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non PSC pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // PSC pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  // const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances /* , 0: new BigNumber(masterPoolAmount.toString()).toJSON() */ }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  // const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards /* , 0: new BigNumber(pendingReward.toString()).toJSON() */ }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/farmpools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n    // const stakingTokenPrice = 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    // const earningTokenPrice = 0\n\n    console.log(\"555555555555555555555555555555555\",isPoolFinished)\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from 'parsec-swap-uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Box, Button, Flex, Input, Text } from \"parsec-swap-uikit\";\r\nimport { useUserSlippageTolerance } from \"state/user/hooks\";\r\nimport QuestionHelper from \"../QuestionHelper\";\r\n\r\nconst MAX_SLIPPAGE = 5000;\r\nconst RISKY_SLIPPAGE_LOW = 50;\r\nconst RISKY_SLIPPAGE_HIGH = 500;\r\n\r\nconst Option = styled.div`\r\n  padding: 0 4px;\r\n`;\r\n\r\nconst Options = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${Option}:first-child {\r\n    padding-left: 0;\r\n  }\r\n\r\n  ${Option}:last-child {\r\n    padding-right: 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst predefinedValues = [  \r\n  { label: \"0.1%\", value: 0.1 },\r\n  { label: \"0.5%\", value: 0.5 },\r\n  { label: \"1%\", value: 1 },\r\n];\r\n\r\n\r\nconst SlippageToleranceSettings = () => {\r\n  const [userSlippageTolerance, setUserslippageTolerance] =\r\n    useUserSlippageTolerance();\r\n  const [value, setValue] = useState(userSlippageTolerance / 100);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value: inputValue } = evt.target;\r\n    setValue(parseFloat(inputValue));\r\n  };\r\n\r\n  // Updates local storage if value is valid\r\n  useEffect(() => {\r\n    try {\r\n      const rawValue = value * 100;\r\n      if (!Number.isNaN(rawValue) && rawValue > 0 && rawValue < MAX_SLIPPAGE) {\r\n        setUserslippageTolerance(rawValue);\r\n        setError(null);\r\n      } else {\r\n        setError(\"Enter a valid slippage percentage\");\r\n      }\r\n    } catch {\r\n      setError(\"Enter a valid slippage percentage\");\r\n    }\r\n  }, [value, setError, setUserslippageTolerance]);\r\n\r\n  // Notify user if slippage is risky\r\n  useEffect(() => {\r\n    if (userSlippageTolerance < RISKY_SLIPPAGE_LOW) {\r\n      setError(\"Your transaction may fail\");\r\n    } else if (userSlippageTolerance > RISKY_SLIPPAGE_HIGH) {\r\n      setError(\"Your transaction may be frontrun\");\r\n    }\r\n  }, [userSlippageTolerance, setError]);\r\n\r\n  return (\r\n    <Box mb=\"16px\">\r\n      <Flex alignItems=\"center\" mb=\"8px\">\r\n        <Text bold>Slippage tolerance</Text>\r\n        <QuestionHelper\r\n          text=\r\n            \"Your transaction will revert if the price changes unfavorably by more than this percentage.\"\r\n          \r\n        />\r\n      </Flex>\r\n      <Options>\r\n        <Flex mb={[\"8px\", \"8px\", 0]} mr={[0, 0, \"8px\"]}>\r\n          {predefinedValues.map(({ label, value: predefinedValue }) => {\r\n            const handleClick = () => setValue(predefinedValue);\r\n\r\n            return (\r\n              <Option key={predefinedValue}>\r\n                <Button\r\n                  variant={value === predefinedValue ? \"primary\" : \"tertiary\"}\r\n                  onClick={handleClick}\r\n                  style ={{background:\"#030923\"}}\r\n                >\r\n                  {label}\r\n                </Button>\r\n              </Option>\r\n            );\r\n          })}\r\n        </Flex>\r\n        <Flex alignItems=\"center\">\r\n          <Option>\r\n            <Input\r\n              type=\"number\"\r\n              scale=\"lg\"\r\n              step={0.1}\r\n              min={0.1}\r\n              placeholder=\"5%\"\r\n              value={value}\r\n              onChange={handleChange}\r\n              isWarning={error !== null}\r\n              style ={{background:\"#030923\"}}\r\n            />\r\n          </Option>\r\n          <Option>\r\n            <Text fontSize=\"18px\">%</Text>\r\n          </Option>\r\n        </Flex>\r\n      </Options>\r\n      {error && (\r\n        <Text mt=\"8px\" color=\"failure\">\r\n          {error}\r\n        </Text>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SlippageToleranceSettings;\r\n","import React from \"react\";\r\nimport { Box, Flex, Text, Toggle, useMatchBreakpoints } from \"parsec-swap-uikit\";\r\nimport { useAudioModeManager } from \"state/user/hooks\";\r\n\r\ntype AudioSettingModalProps = {\r\n  translateString: (translationId: number, fallback: string) => string;\r\n};\r\n\r\nconst AudioSetting = () => {\r\n  const { isSm, isXs } = useMatchBreakpoints();\r\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager();\r\n\r\n  return (\r\n    <Box mb=\"16px\">\r\n      <Flex alignItems=\"center\" mb=\"8px\">\r\n        <Text bold>Audio</Text>\r\n      </Flex>\r\n      <Box>\r\n        <Toggle\r\n          scale={isSm || isXs ? \"sm\" : \"md\"}\r\n          checked={audioPlay}\r\n          onChange={toggleSetAudioMode}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AudioSetting;\r\n","import React from \"react\";\r\nimport { Modal } from \"parsec-swap-uikit\";\r\nimport SlippageToleranceSetting from \"./SlippageToleranceSetting\";\r\nimport AudioSetting from \"./AudioSetting\";\r\n\r\ntype SettingsModalProps = {\r\n  onDismiss?: () => void;\r\n};\r\n\r\n// TODO: Fix UI Kit typings\r\nconst defaultOnDismiss = () => null;\r\n  \r\nconst SettingsModal = ({\r\n  onDismiss = defaultOnDismiss,\r\n}: SettingsModalProps) => { \r\n  return (\r\n    <Modal title=\"Settings\" onDismiss={onDismiss} style={{background:\"#141436\"}}>\r\n      <SlippageToleranceSetting />\r\n      {/* <TransactionDeadlineSetting /> */}\r\n      <AudioSetting />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  1339?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native PSC behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  MINT = 'MINT',\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n","import { ChainId, Token } from 'parsec-swap-sdk'\n\nexport const COLA: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    18,\n    'COLA',\n    'ZilionixxSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0x9F2ADF0536656f9ca6dfFD2060156Fd9bF75baB7',\n    18,\n    'COLA',\n    'ZilionixxSwap Token',\n  ),\n}\n\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'InveCoin USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0x2D54D6E69D69762BCEB41e90c87ebDc2e611B6f6',\n    18,\n    'BUSD',\n    'InveCoin USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.TESTNET, '0x74baC7E4cfBea8F71d4ea6ce3C190bFce61Bc22E', 18, 'WBNB', 'Wrapped PSC')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  PSC: {\n    symbol: 'Parsec',\n    projectLink: 'https://www.binance.com/',\n  },\n  busd: { \n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      1339: '0x2D54D6E69D69762BCEB41e90c87ebDc2e611B6f6',\n    },\n    decimals: 18,\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      1339: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n \n  Parsec: {\n    symbol: 'Parsec',\n    address: {\n      56: '0x45870C2b385EAC7ffb1342600fAc2Ad70C62fd80',\n      1339: '0xfeae27388A65eE984F452f86efFEd42AaBD438FD',\n    },\n    decimals: 18,\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059ff775485246999027b3197955',\n      1339: '0xF5745d85f49325Fb6E3Eb1bAc77045F39808dAE1',\n    },\n    decimals: 18,\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  cola: {\n    symbol: 'COLA',\n    address: {\n      56: '0x500d72BD1F11E4D66E9AE7566976ff1dE3691dA1',\n      1339: '0xBF921f94Fd9eF1738bE25D8CeCFDFE2C822c81B0',\n    },\n    decimals: 18,\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  wbnb: {\n    symbol: 'WBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      1339: '0x74baC7E4cfBea8F71d4ea6ce3C190bFce61Bc22E',\n    },\n    decimals: 18,\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  busdInvLP: {\n    symbol: 'BUSD-MOS LP',\n    address: { \n      56: '',\n      1339: '0x2D54D6E69D69762BCEB41e90c87ebDc2e611B6f6', \n    },\n    decimals: 18,\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  gmi: {\n    address: { 56: '0x93D8d25E3C9A847a5Da79F79ecaC89461FEcA846', 1339: '' },\n    decimals: 18,\n    symbol: 'GMI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  tlos: {\n    address: { 56: '0xb6C53431608E626AC81a9776ac3e999c5556717c', 1339: '' },\n    decimals: 18,\n    symbol: 'TLOS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  beta: {\n    address: { 56: '0xBe1a001FE942f96Eea22bA08783140B9Dcc09D28', 1339: '' },\n    decimals: 18,\n    symbol: 'BETA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  nft: {\n    address: { 56: '0x1fC9004eC7E5722891f5f38baE7678efCB11d34D', 1339: '' },\n    decimals: 6,\n    symbol: 'NFT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  stephero: {\n    address: { 56: '0xE8176d414560cFE1Bf82Fd73B986823B89E4F545', 1339: '' },\n    decimals: 18,\n    symbol: 'HERO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  pros: {\n    address: { 56: '0xEd8c8Aa8299C10f067496BB66f8cC7Fb338A3405', 1339: '' },\n    decimals: 18,\n    symbol: 'PROS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  qbt: {\n    address: { 56: '0x17B7163cf1Dbd286E262ddc68b553D899B93f526', 1339: '' },\n    decimals: 18,\n    symbol: 'QBT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  cvp: {\n    address: { 56: '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E', 1339: '' },\n    decimals: 18,\n    symbol: 'CVP',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bscdefi: {\n    address: { 56: '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3', 1339: '' },\n    decimals: 18,\n    symbol: 'BSCDEFI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  dai: {\n    address: { 56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 1339: '0x7A43253465bed480Ef9fdAEd06E77f98488BD8d2' },\n    decimals: 18,\n    symbol: 'DAI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  btcb: {\n    address: { 56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 1339: '' },\n    decimals: 18,\n    symbol: 'BTCB',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ust: {\n    address: { 56: '0x23396cF899Ca06c4472205fC903bDB4de249D6fC', 1339: '' },\n    decimals: 18,\n    symbol: 'UST',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  eth: {\n    address: { 56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8', 1339: '' },\n    decimals: 18,\n    symbol: 'ETH',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  usdc: {\n    address: { 56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d', 1339: '' },\n    decimals: 18,\n    symbol: 'USDC',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  kalm: {\n    address: { 56: '0x4BA0057f784858a48fe351445C672FF2a3d43515', 1339: '' },\n    decimals: 18,\n    symbol: 'KALM',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mos: {\n    address: { 56:'',\n    1339:'0xdFe5e9286297e47f7026BD193573dbCF303E7019' },\n    decimals: 18,\n    symbol: 'MOS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  hotcross: {\n    address: { 56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6', 1339: '' },\n    decimals: 18,\n    symbol: 'HOTCROSS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  belt: {\n    address: { 56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f', 1339: '' },\n    decimals: 18,\n    symbol: 'BELT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  watch: {\n    address: { 56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0', 1339: '' },\n    decimals: 18,\n    symbol: 'WATCH',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bry: {\n    address: { 56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830', 1339: '' },\n    decimals: 18,\n    symbol: 'BRY',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  wsote: {\n    address: { 56: '0x541E619858737031A1244A5d0Cd47E5ef480342c', 1339: '' },\n    decimals: 18,\n    symbol: 'wSOTE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  helmet: {\n    address: { 56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8', 1339: '' },\n    decimals: 18,\n    symbol: 'Helmet',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ten: {\n    address: { 56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C', 1339: '' },\n    decimals: 18,\n    symbol: 'TEN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ditto: {\n    address: { 56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715', 1339: '' },\n    decimals: 9,\n    symbol: 'DITTO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  blink: {\n    address: { 56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F', 1339: '' },\n    decimals: 6,\n    symbol: 'BLINK',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  pha: {\n    address: { 56: '0x0112e557d400474717056C4e6D40eDD846F38351', 1339: '' },\n    decimals: 18,\n    symbol: 'PHA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  babycake: {\n    address: { 56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c', 1339: '' },\n    decimals: 18,\n    symbol: 'BABYCAKE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bmon: {\n    address: { 56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340', 1339: '' },\n    decimals: 18,\n    symbol: 'BMON',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  hero: {\n    address: { 56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13', 1339: '' },\n    decimals: 18,\n    symbol: 'HERO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  wsg: {\n    address: { 56: '0xA58950F05FeA2277d2608748412bf9F802eA4901', 1339: '' },\n    decimals: 18,\n    symbol: 'WSG',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mcrn: {\n    address: { 56: '0xacb2d47827C9813AE26De80965845D80935afd0B', 1339: '' },\n    decimals: 18,\n    symbol: 'MCRN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  revv: {\n    address: { 56: '0x833F307aC507D47309fD8CDD1F835BeF8D702a93', 1339: '' },\n    decimals: 18,\n    symbol: 'REVV',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  skill: {\n    address: { 56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab', 1339: '' },\n    decimals: 18,\n    symbol: 'SKILL',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  if: {\n    address: { 56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1', 1339: '' },\n    decimals: 18,\n    symbol: 'IF',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  sps: {\n    address: { 56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F', 1339: '' },\n    decimals: 18,\n    symbol: 'SPS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  chess: {\n    address: { 56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6', 1339: '' },\n    decimals: 18,\n    symbol: 'CHESS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  titan: {\n    address: { 56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2', 1339: '' },\n    decimals: 18,\n    symbol: 'TITAN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  harmony: {\n    address: { 56: '0x03fF0ff224f904be3118461335064bB48Df47938', 1339: '' },\n    decimals: 18,\n    symbol: 'ONE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mask: {\n    address: { 56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3', 1339: '' },\n    decimals: 18,\n    symbol: 'MASK',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  dvi: {\n    address: { 56: '0x758FB037A375F17c7e195CC634D77dA4F554255B', 1339: '' },\n    decimals: 18,\n    symbol: 'DVI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  adx: {\n    address: { 56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819', 1339: '' },\n    decimals: 18,\n    symbol: 'ADX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bscpad: {\n    address: { 56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700', 1339: '' },\n    decimals: 18,\n    symbol: 'BSCPAD',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  rabbit: {\n    address: { 56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41', 1339: '' },\n    decimals: 18,\n    symbol: 'RABBIT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  form: {\n    address: { 56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19', 1339: '' },\n    decimals: 18,\n    symbol: 'FORM',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  txl: {\n    address: { 56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5', 1339: '' },\n    decimals: 18,\n    symbol: 'TXL',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  orbs: {\n    address: { 56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80', 1339: '' },\n    decimals: 18,\n    symbol: 'ORBS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  cos: {\n    address: { 56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501', 1339: '' },\n    decimals: 18,\n    symbol: 'COS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bunny: {\n    address: { 56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51', 1339: '' },\n    decimals: 18,\n    symbol: 'BUNNY',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  alice: {\n    address: { 56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8', 1339: '' },\n    decimals: 6,\n    symbol: 'ALICE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  for: {\n    address: { 56: '0x658A109C5900BC6d2357c87549B651670E5b0539', 1339: '' },\n    decimals: 18,\n    symbol: 'FOR',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bux: {\n    address: { 56: '0x211FfbE424b90e25a15531ca322adF1559779E45', 1339: '' },\n    decimals: 18,\n    symbol: 'BUX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  nuls: {\n    address: { 56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B', 1339: '' },\n    decimals: 8,\n    symbol: 'NULS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ramp: {\n    address: { 56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa', 1339: '' },\n    decimals: 18,\n    symbol: 'RAMP',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bfi: {\n    address: { 56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b', 1339: '' },\n    decimals: 18,\n    symbol: 'BFI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  dexe: {\n    address: { 56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6', 1339: '' },\n    decimals: 18,\n    symbol: 'DEXE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bel: {\n    address: { 56: '0x8443f091997f06a61670B735ED92734F5628692F', 1339: '' },\n    decimals: 18,\n    symbol: 'BEL',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  tpt: {\n    address: { 56: '0xECa41281c24451168a37211F0bc2b8645AF45092', 1339: '' },\n    decimals: 4,\n    symbol: 'TPT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  xmark: {\n    address: { 56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580', 1339: '' },\n    decimals: 9,\n    symbol: 'xMARK',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bmxx: {\n    address: { 56: '0x4131b87F74415190425ccD873048C708F8005823', 1339: '' },\n    decimals: 18,\n    symbol: 'bMXX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  iotx: {\n    address: { 56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5', 1339: '' },\n    decimals: 18,\n    symbol: 'IOTX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bor: {\n    address: { 56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241', 1339: '' },\n    decimals: 18,\n    symbol: 'BOR',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bopen: {\n    address: { 56: '0xF35262a9d427F96d2437379eF090db986eaE5d42', 1339: '' },\n    decimals: 18,\n    symbol: 'bOPEN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  dodo: {\n    address: { 56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2', 1339: '' },\n    decimals: 18,\n    symbol: 'DODO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  swingby: {\n    address: { 56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739', 1339: '' },\n    decimals: 18,\n    symbol: 'SWINGBY',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  zee: {\n    address: { 56: '0x44754455564474A89358B2C2265883DF993b12F0', 1339: '' },\n    decimals: 18,\n    symbol: 'ZEE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  swgb: {\n    address: { 56: '0xE40255C5d7fa7ceEc5120408C78C787CECB4cfdb', 1339: '' },\n    decimals: 18,\n    symbol: 'SWGb',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  swg: {\n    address: { 56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B', 1339: '' },\n    decimals: 18,\n    symbol: 'SWG',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  sfp: {\n    address: { 56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb', 1339: '' },\n    decimals: 18,\n    symbol: 'SFP',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  lina: {\n    address: { 56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878', 1339: '' },\n    decimals: 18,\n    symbol: 'LINA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  lit: {\n    address: { 56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723', 1339: '' },\n    decimals: 18,\n    symbol: 'LIT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  hget: {\n    address: { 56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731', 1339: '' },\n    decimals: 6,\n    symbol: 'HGET',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bdo: {\n    address: { 56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454', 1339: '' },\n    decimals: 18,\n    symbol: 'BDO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  egld: {\n    address: { 56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe', 1339: '' },\n    decimals: 18,\n    symbol: 'EGLD',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  front: {\n    address: { 56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b', 1339: '' },\n    decimals: 18,\n    symbol: 'FRONT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  btcst: {\n    address: { 56: '0x78650B139471520656b9E7aA7A5e9276814a38e9', 1339: '' },\n    decimals: 17,\n    symbol: 'BTCST',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bscx: {\n    address: { 56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587', 1339: '' },\n    decimals: 18,\n    symbol: 'BSCX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  balbt: {\n    address: { 56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7', 1339: '' },\n    decimals: 18,\n    symbol: 'bALBT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  asr: {\n    address: { 56: '0x80D5f92C2c8C682070C95495313dDB680B267320', 1339: '' },\n    decimals: 2,\n    symbol: 'ASR',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  atm: {\n    address: { 56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E', 1339: '' },\n    decimals: 2,\n    symbol: 'ATM',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  og: {\n    address: { 56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c', 1339: '' },\n    decimals: 2,\n    symbol: 'OG',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  reef: {\n    address: { 56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e', 1339: '' },\n    decimals: 18,\n    symbol: 'REEF',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  juv: {\n    address: { 56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B', 1339: '' },\n    decimals: 2,\n    symbol: 'JUV',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  psg: {\n    address: { 56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1', 1339: '' },\n    decimals: 2,\n    symbol: 'PSG',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  vai: {\n    address: { 56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7', 1339: '' },\n    decimals: 18,\n    symbol: 'VAI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  unfi: {\n    address: { 56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B', 1339: '' },\n    decimals: 18,\n    symbol: 'UNFI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  twt: {\n    address: { 56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003', 1339: '' },\n    decimals: 18,\n    symbol: 'TWT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  hard: {\n    address: { 56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4', 1339: '' },\n    decimals: 6,\n    symbol: 'HARD',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  broobee: {\n    address: { 56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe', 1339: '' },\n    decimals: 18,\n    symbol: 'bROOBEE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  stax: {\n    address: { 56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4', 1339: '' },\n    decimals: 18,\n    symbol: 'STAX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  nar: {\n    address: { 56: '0xA1303E6199b319a891b79685F0537D289af1FC83', 1339: '' },\n    decimals: 18,\n    symbol: 'NAR',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  nya: {\n    address: { 56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5', 1339: '' },\n    decimals: 18,\n    symbol: 'NYA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ctk: {\n    address: { 56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929', 1339: '' },\n    decimals: 6,\n    symbol: 'CTK',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  inj: {\n    address: { 56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495', 1339: '' },\n    decimals: 18,\n    symbol: 'INJ',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  sxp: {\n    address: { 56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A', 1339: '' },\n    decimals: 18,\n    symbol: 'SXP',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  alpha: {\n    address: { 56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975', 1339: '' },\n    decimals: 18,\n    symbol: 'ALPHA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  xvs: {\n    address: { 56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63', 1339: '' },\n    decimals: 18,\n    symbol: 'XVS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  sushi: {\n    address: { 56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4', 1339: '' },\n    decimals: 18,\n    symbol: 'SUSHI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  comp: {\n    address: { 56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8', 1339: '' },\n    decimals: 18,\n    symbol: 'COMP',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bifi: {\n    address: { 56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A', 1339: '' },\n    decimals: 18,\n    symbol: 'BIFI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  dusk: {\n    address: { 56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C', 1339: '' },\n    decimals: 18,\n    symbol: 'DUSK',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  beth: {\n    address: { 56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B', 1339: '' },\n    decimals: 18,\n    symbol: 'BETH',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mamzn: {\n    address: { 56: '0x3947B992DC0147D2D89dF0392213781b04B25075', 1339: '' },\n    decimals: 18,\n    symbol: 'mAMZN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mgoogl: {\n    address: { 56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f', 1339: '' },\n    decimals: 18,\n    symbol: 'mGOOGL',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mnflx: {\n    address: { 56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc', 1339: '' },\n    decimals: 18,\n    symbol: 'mNFLX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mtsla: {\n    address: { 56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3', 1339: '' },\n    decimals: 18,\n    symbol: 'mTSLA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ltc: {\n    address: { 56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94', 1339: '' },\n    decimals: 18,\n    symbol: 'LTC',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ada: {\n    address: { 56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47', 1339: '' },\n    decimals: 18,\n    symbol: 'ADA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  band: {\n    address: { 56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18', 1339: '' },\n    decimals: 18,\n    symbol: 'BAND',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  dot: {\n    address: { 56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402', 1339: '' },\n    decimals: 18,\n    symbol: 'DOT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  eos: {\n    address: { 56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6', 1339: '' },\n    decimals: 18,\n    symbol: 'EOS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  link: {\n    address: { 56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD', 1339: '' },\n    decimals: 18,\n    symbol: 'LINK',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  xrp: {\n    address: { 56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE', 1339: '' },\n    decimals: 18,\n    symbol: 'XRP',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  atom: {\n    address: { 56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335', 1339: '' },\n    decimals: 18,\n    symbol: 'ATOM',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  yfii: {\n    address: { 56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5', 1339: '' },\n    decimals: 18,\n    symbol: 'YFII',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  xtz: {\n    address: { 56: '0x16939ef78684453bfDFb47825F8a5F714f12623a', 1339: '' },\n    decimals: 18,\n    symbol: 'XTZ',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bch: {\n    address: { 56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf', 1339: '' },\n    decimals: 18,\n    symbol: 'BCH',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  yfi: {\n    address: { 56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e', 1339: '' },\n    decimals: 18,\n    symbol: 'YFI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  uni: {\n    address: { 56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1', 1339: '' },\n    decimals: 18,\n    symbol: 'UNI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  fil: {\n    address: { 56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153', 1339: '' },\n    decimals: 18,\n    symbol: 'FIL',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bake: {\n    address: { 56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5', 1339: '' },\n    decimals: 18,\n    symbol: 'BAKE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  burger: {\n    address: { 56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f', 1339: '' },\n    decimals: 18,\n    symbol: 'BURGER',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bdigg: {\n    address: { 56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA', 1339: '' },\n    decimals: 18,\n    symbol: 'bDIGG',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bbadger: {\n    address: { 56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae', 1339: '' },\n    decimals: 18,\n    symbol: 'bBadger',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  trade: {\n    address: { 56: '0x7af173F350D916358AF3e218Bdf2178494Beb748', 1339: '' },\n    decimals: 18,\n    symbol: 'TRADE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  pnt: {\n    address: { 56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92', 1339: '' },\n    decimals: 18,\n    symbol: 'PNT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mir: {\n    address: { 56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9', 1339: '' },\n    decimals: 18,\n    symbol: 'MIR',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  pbtc: {\n    address: { 56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C', 1339: '' },\n    decimals: 18,\n    symbol: 'pBTC',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  lto: {\n    address: { 56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd', 1339: '' },\n    decimals: 18,\n    symbol: 'LTO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  pcws: {\n    address: { 56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd', 1339: '' },\n    decimals: 18,\n    symbol: 'pCWS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  zil: {\n    address: { 56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787', 1339: '' },\n    decimals: 12,\n    symbol: 'ZIL',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  lien: {\n    address: { 56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3', 1339: '' },\n    decimals: 8,\n    symbol: 'LIEN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  swth: {\n    address: { 56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C', 1339: '' },\n    decimals: 8,\n    symbol: 'SWTH',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  dft: {\n    address: { 56: '0x42712dF5009c20fee340B245b510c0395896cF6e', 1339: '' },\n    decimals: 18,\n    symbol: 'DFT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  gum: {\n    address: { 56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462', 1339: '' },\n    decimals: 18,\n    symbol: 'GUM',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  dego: {\n    address: { 56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC', 1339: '' },\n    decimals: 18,\n    symbol: 'DEGO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  nrv: {\n    address: { 56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096', 1339: '' },\n    decimals: 18,\n    symbol: 'NRV',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  easy: {\n    address: { 56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B', 1339: '' },\n    decimals: 18,\n    symbol: 'EASY',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  oddz: {\n    address: { 56: '0xCD40F2670CF58720b694968698A5514e924F742d', 1339: '' },\n    decimals: 18,\n    symbol: 'ODDZ',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  hoo: {\n    address: { 56: '0xE1d1F66215998786110Ba0102ef558b22224C016', 1339: '' },\n    decimals: 8,\n    symbol: 'HOO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  apys: {\n    address: { 56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7', 1339: '' },\n    decimals: 18,\n    symbol: 'APYS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bondly: {\n    address: { 56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89', 1339: '' },\n    decimals: 18,\n    symbol: 'BONDLY',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  tko: {\n    address: { 56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809', 1339: '' },\n    decimals: 18,\n    symbol: 'TKO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  itam: {\n    address: { 56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B', 1339: '' },\n    decimals: 18,\n    symbol: 'ITAM',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  arpa: {\n    address: { 56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e', 1339: '' },\n    decimals: 18,\n    symbol: 'ARPA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  eps: {\n    address: { 56: '0xA7f552078dcC247C2684336020c03648500C6d9F', 1339: '' },\n    decimals: 18,\n    symbol: 'EPS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  jgn: {\n    address: { 56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75', 1339: '' },\n    decimals: 18,\n    symbol: 'JGN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  tlm: {\n    address: { 56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95', 1339: '' },\n    decimals: 4,\n    symbol: 'TLM',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  perl: {\n    address: { 56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B', 1339: '' },\n    decimals: 18,\n    symbol: 'PERL',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  alpa: {\n    address: { 56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03', 1339: '' },\n    decimals: 18,\n    symbol: 'ALPA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  hzn: {\n    address: { 56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD', 1339: '' },\n    decimals: 18,\n    symbol: 'HZN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  suter: {\n    address: { 56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055', 1339: '' },\n    decimals: 18,\n    symbol: 'SUTER',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  cgg: {\n    address: { 56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2', 1339: '' },\n    decimals: 18,\n    symbol: 'CGG',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mix: {\n    address: { 56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197', 1339: '' },\n    decimals: 18,\n    symbol: 'MIX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  hakka: {\n    address: { 56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC', 1339: '' },\n    decimals: 18,\n    symbol: 'HAKKA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  xed: {\n    address: { 56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f', 1339: '' },\n    decimals: 18,\n    symbol: 'XED',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  τbtc: {\n    address: { 56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c', 1339: '' },\n    decimals: 9,\n    symbol: 'τBTC',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  alpaca: {\n    address: { 56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F', 1339: '' },\n    decimals: 18,\n    symbol: 'ALPACA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  dfd: {\n    address: { 56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff', 1339: '' },\n    decimals: 18,\n    symbol: 'DFD',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  lmt: {\n    address: { 56: '0x9617857E191354dbEA0b714d78Bc59e57C411087', 1339: '' },\n    decimals: 18,\n    symbol: 'LMT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bttold: {\n    address: { 56: '0x8595F9dA7b868b1822194fAEd312235E43007b49', 1339: '' },\n    decimals: 18,\n    symbol: 'BTTOLD',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  trx: {\n    address: { 56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B', 1339: '' },\n    decimals: 18,\n    symbol: 'TRX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  win: {\n    address: { 56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99', 1339: '' },\n    decimals: 18,\n    symbol: 'WIN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mcoin: {\n    address: { 56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f', 1339: '' },\n    decimals: 18,\n    symbol: 'MCOIN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  math: {\n    address: { 56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983', 1339: '' },\n    decimals: 18,\n    symbol: 'MATH',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  kun: {\n    address: { 56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584', 1339: '' },\n    decimals: 18,\n    symbol: 'KUN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  qsd: {\n    address: { 56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2', 1339: '' },\n    decimals: 18,\n    symbol: 'QSD',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  hyfi: {\n    address: { 56: '0x9a319b959e33369C5eaA494a770117eE3e585318', 1339: '' },\n    decimals: 18,\n    symbol: 'HYFI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  oin: {\n    address: { 56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA', 1339: '' },\n    decimals: 8,\n    symbol: 'OIN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  doge: {\n    address: { 56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43', 1339: '' },\n    decimals: 8,\n    symbol: 'DOGE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  fine: {\n    address: { 56: '0x4e6415a5727ea08aAE4580057187923aeC331227', 1339: '' },\n    decimals: 18,\n    symbol: 'FINE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  one: {\n    address: { 56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0', 1339: '' },\n    decimals: 18,\n    symbol: 'ONE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  pmon: {\n    address: { 56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2', 1339: '' },\n    decimals: 18,\n    symbol: 'PMON',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  τdoge: {\n    address: { 56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A', 1339: '' },\n    decimals: 8,\n    symbol: 'τDOGE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  btr: {\n    address: { 56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3', 1339: '' },\n    decimals: 18,\n    symbol: 'BTR',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ubxt: {\n    address: { 56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811', 1339: '' },\n    decimals: 18,\n    symbol: 'UBXT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  wmass: {\n    address: { 56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17', 1339: '' },\n    decimals: 8,\n    symbol: 'WMASS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  rfox: {\n    address: { 56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5', 1339: '' },\n    decimals: 18,\n    symbol: 'RFOX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  xend: {\n    address: { 56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608', 1339: '' },\n    decimals: 18,\n    symbol: 'XEND',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  cyc: {\n    address: { 56: '0x810EE35443639348aDbbC467b33310d2AB43c168', 1339: '' },\n    decimals: 18,\n    symbol: 'CYC',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  chr: {\n    address: { 56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE', 1339: '' },\n    decimals: 6,\n    symbol: 'CHR',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  deri: {\n    address: { 56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5', 1339: '' },\n    decimals: 18,\n    symbol: 'DERI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  well: {\n    address: { 56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5', 1339: '' },\n    decimals: 18,\n    symbol: 'WELL',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  wex: {\n    address: { 56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90', 1339: '' },\n    decimals: 18,\n    symbol: 'WEX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  waultx: {\n    address: { 56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21', 1339: '' },\n    decimals: 18,\n    symbol: 'WAULTx',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  popen: {\n    address: { 56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5', 1339: '' },\n    decimals: 18,\n    symbol: 'pOPEN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ez: {\n    address: { 56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83', 1339: '' },\n    decimals: 18,\n    symbol: 'EZ',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  vrt: {\n    address: { 56: '0x5F84ce30DC3cF7909101C69086c50De191895883', 1339: '' },\n    decimals: 18,\n    symbol: 'VRT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  tusd: {\n    address: { 56: '0x14016E85a25aeb13065688cAFB43044C2ef86784', 1339: '' },\n    decimals: 18,\n    symbol: 'TUSD',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mtrg: {\n    address: { 56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F', 1339: '' },\n    decimals: 18,\n    symbol: 'MTRG',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ktn: {\n    address: { 56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E', 1339: '' },\n    decimals: 18,\n    symbol: 'KTN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  qkc: {\n    address: { 56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da', 1339: '' },\n    decimals: 18,\n    symbol: 'QKC',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bcfx: {\n    address: { 56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF', 1339: '' },\n    decimals: 18,\n    symbol: 'bCFX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mx: {\n    address: { 56: '0x9F882567A62a5560d147d64871776EeA72Df41D3', 1339: '' },\n    decimals: 18,\n    symbol: 'MX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ata: {\n    address: { 56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225', 1339: '' },\n    decimals: 18,\n    symbol: 'ATA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mbox: {\n    address: { 56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377', 1339: '' },\n    decimals: 18,\n    symbol: 'MBOX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  boring: {\n    address: { 56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F', 1339: '' },\n    decimals: 18,\n    symbol: 'BORING',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  marsh: {\n    address: { 56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256', 1339: '' },\n    decimals: 18,\n    symbol: 'MARSH',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ampl: {\n    address: { 56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F', 1339: '' },\n    decimals: 9,\n    symbol: 'AMPL',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  o3: {\n    address: { 56: '0xEe9801669C6138E84bD50dEB500827b776777d28', 1339: '' },\n    decimals: 18,\n    symbol: 'O3',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  hai: {\n    address: { 56: '0xaA9E582e5751d703F85912903bacADdFed26484C', 1339: '' },\n    decimals: 8,\n    symbol: 'HAI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  htb: {\n    address: { 56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea', 1339: '' },\n    decimals: 18,\n    symbol: 'HTB',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  woo: {\n    address: { 56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B', 1339: '' },\n    decimals: 18,\n    symbol: 'WOO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  $dg: {\n    address: { 56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19', 1339: '' },\n    decimals: 18,\n    symbol: '$DG',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  safemoon: {\n    address: { 56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3', 1339: '' },\n    decimals: 9,\n    symbol: 'SAFEMOON',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  axs: {\n    address: { 56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0', 1339: '' },\n    decimals: 18,\n    symbol: 'AXS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  c98: {\n    address: { 56: '0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6', 1339: '' },\n    decimals: 18,\n    symbol: 'c98',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  pots: {\n    address: { 56: '0x3Fcca8648651E5b974DD6d3e50F61567779772A8', 1339: '' },\n    decimals: 18,\n    symbol: 'POTS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  gnt: {\n    address: { 56: '0xF750A26EB0aCf95556e8529E72eD530f3b60f348', 1339: '' },\n    decimals: 18,\n    symbol: 'GNT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  rusd: {\n    address: { 56: '0x07663837218A003e66310a01596af4bf4e44623D', 1339: '' },\n    decimals: 18,\n    symbol: 'rUSD',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bp: {\n    address: { 56: '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1', 1339: '' },\n    decimals: 18,\n    symbol: 'BP',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  sfund: {\n    address: { 56: '0x477bC8d23c634C154061869478bce96BE6045D12', 1339: '' },\n    decimals: 18,\n    symbol: 'SFUND',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  naos: {\n    address: { 56: '0x758d08864fB6cCE3062667225ca10b8F00496cc2', 1339: '' },\n    decimals: 18,\n    symbol: 'NAOS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  cart: {\n    address: { 56: '0x5C8C8D560048F34E5f7f8ad71f2f81a89DBd273e', 1339: '' },\n    decimals: 18,\n    symbol: 'CART',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  light: {\n    address: { 56: '0x037838b556d9c9d654148a284682C55bB5f56eF4', 1339: '' },\n    decimals: 18,\n    symbol: 'LIGHT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  rpg: {\n    address: { 56: '0xc2098a8938119A52B1F7661893c0153A6CB116d5', 1339: '' },\n    decimals: 18,\n    symbol: 'RPG',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  mcb: {\n    address: { 56: '0x5fE80d2CD054645b9419657d3d10d26391780A7B', 1339: '' },\n    decimals: 18,\n    symbol: 'MCB',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  lazio: {\n    address: { 56: '0x77d547256A2cD95F32F67aE0313E450Ac200648d', 1339: '' },\n    decimals: 8,\n    symbol: 'LAZIO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  arv: {\n    address: { 56: '0x6679eB24F59dFe111864AEc72B443d1Da666B360', 1339: '' },\n    decimals: 8,\n    symbol: 'ARV',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  moni: {\n    address: { 56: '0x9573c88aE3e37508f87649f87c4dd5373C9F31e0', 1339: '' },\n    decimals: 18,\n    symbol: 'MONI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  xms: {\n    address: { 56: '0x7859B01BbF675d67Da8cD128a50D155cd881B576', 1339: '' },\n    decimals: 18,\n    symbol: 'XMS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  zoo: {\n    address: { 56: '0x1D229B958D5DDFca92146585a8711aECbE56F095', 1339: '' },\n    decimals: 18,\n    symbol: 'ZOO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  fina: {\n    address: { 56: '0x426c72701833fdDBdFc06c944737C6031645c708', 1339: '' },\n    decimals: 18,\n    symbol: 'FINA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  dar: {\n    address: { 56: '0x23CE9e926048273eF83be0A3A8Ba9Cb6D45cd978', 1339: '' },\n    decimals: 6,\n    symbol: 'DAR',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  xwg: {\n    address: { 56: '0x6b23C89196DeB721e6Fd9726E6C76E4810a464bc', 1339: '' },\n    decimals: 18,\n    symbol: 'XWG',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  eternal: {\n    address: { 56: '0xD44FD09d74cd13838F137B590497595d6b3FEeA4', 1339: '' },\n    decimals: 18,\n    symbol: 'ETERNAL',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  porto: {\n    address: { 56: '0x49f2145d6366099e13B10FbF80646C0F377eE7f6', 1339: '' },\n    decimals: 8,\n    symbol: 'PORTO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  kart: {\n    address: { 56: '0x8BDd8DBcBDf0C066cA5f3286d33673aA7A553C10', 1339: '' },\n    decimals: 18,\n    symbol: 'KART',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  qi: {\n    address: { 56: '0x8729438EB15e2C8B576fCc6AeCdA6A148776C0F5', 1339: '' },\n    decimals: 18,\n    symbol: 'QI',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  sheesha: {\n    address: { 56: '0x232FB065D9d24c34708eeDbF03724f2e95ABE768', 1339: '' },\n    decimals: 18,\n    symbol: 'SHEESHA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bcoin: {\n    address: { 56: '0x00e1656e45f18ec6747F5a8496Fd39B50b38396D', 1339: '' },\n    decimals: 18,\n    symbol: 'BCOIN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  quidd: {\n    address: { 56: '0x7961Ade0a767c0E5B67Dd1a1F78ba44F727642Ed', 1339: '' },\n    decimals: 18,\n    symbol: 'QUIDD',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  santos: {\n    address: { 56: '0xA64455a4553C9034236734FadDAddbb64aCE4Cc7', 1339: '' },\n    decimals: 8,\n    symbol: 'SANTOS',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  nabox: {\n    address: { 56: '0x755f34709E369D37C6Fa52808aE84A32007d1155', 1339: '' },\n    decimals: 18,\n    symbol: 'NABOX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  xcv: {\n    address: { 56: '0x4be63a9b26EE89b9a3a13fd0aA1D0b2427C135f8', 1339: '' },\n    decimals: 18,\n    symbol: 'XCV',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  idia: {\n    address: { 56: '0x0b15Ddf19D47E6a86A56148fb4aFFFc6929BcB89', 1339: '' },\n    decimals: 18,\n    symbol: 'IDIA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  tt: {\n    address: { 56: '0x990E7154bB999FAa9b2fa5Ed29E822703311eA85', 1339: '' },\n    decimals: 18,\n    symbol: 'TT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  gmee: {\n    address: { 56: '0x84e9a6F9D240FdD33801f7135908BfA16866939A', 1339: '' },\n    decimals: 18,\n    symbol: 'GMEE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  htd: {\n    address: { 56: '0x5E2689412Fae5c29BD575fbe1d5C1CD1e0622A8f', 1339: '' },\n    decimals: 18,\n    symbol: 'HTD',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  dpt: {\n    address: { 56: '0xE69cAef10A488D7AF31Da46c89154d025546e990', 1339: '' },\n    decimals: 18,\n    symbol: 'DPT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  thg: {\n    address: { 56: '0x9fD87aEfe02441B123c3c32466cD9dB4c578618f', 1339: '' },\n    decimals: 18,\n    symbol: 'THG',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ccar: {\n    address: { 56: '0x50332bdca94673F33401776365b66CC4e81aC81d', 1339: '' },\n    decimals: 18,\n    symbol: 'CCAR',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  high: {\n    address: { 56: '0x5f4Bde007Dc06b867f86EBFE4802e34A1fFEEd63', 1339: '' },\n    decimals: 18,\n    symbol: 'HIGH',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  sdao: {\n    address: { 56: '0x90Ed8F1dc86388f14b64ba8fb4bbd23099f18240', 1339: '' },\n    decimals: 18,\n    symbol: 'SDAO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  antex: {\n    address: { 56: '0xCA1aCAB14e85F30996aC83c64fF93Ded7586977C', 1339: '' },\n    decimals: 8,\n    symbol: 'ANTEX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bbt: {\n    address: { 56: '0xD48474E7444727bF500a32D5AbE01943f3A59A64', 1339: '' },\n    decimals: 8,\n    symbol: 'BBT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  woop: {\n    address: { 56: '0x8b303d5BbfBbf46F1a4d9741E491e06986894e18', 1339: '' },\n    decimals: 18,\n    symbol: 'WOOP',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  gm: {\n    address: { 56: '0xe2604C9561D490624AA35e156e65e590eB749519', 1339: '' },\n    decimals: 18,\n    symbol: 'GM',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  aog: {\n    address: { 56: '0x40C8225329Bd3e28A043B029E0D07a5344d2C27C', 1339: '' },\n    decimals: 18,\n    symbol: 'AOG',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  '8pay': {\n    address: { 56: '0xFeea0bDd3D07eb6FE305938878C0caDBFa169042', 1339: '' },\n    decimals: 18,\n    symbol: '8PAY',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bath: {\n    address: { 56: '0x0bc89aa98Ad94E6798Ec822d0814d934cCD0c0cE', 1339: '' },\n    decimals: 18,\n    symbol: 'BATH',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  insur: {\n    address: { 56: '0x3192CCDdf1CDcE4Ff055EbC80f3F0231b86A7E30', 1339: '' },\n    decimals: 18,\n    symbol: 'INSUR',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  froyo: {\n    address: { 56: '0xe369fec23380f9F14ffD07a1DC4b7c1a9fdD81c9', 1339: '' },\n    decimals: 18,\n    symbol: 'FROYO',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  apx: {\n    address: { 56: '0x78F5d389F5CDCcFc41594aBaB4B0Ed02F31398b3', 1339: '' },\n    decimals: 18,\n    symbol: 'APX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  prl: {\n    address: { 56: '0xd07e82440A395f3F3551b42dA9210CD1Ef4f8B24', 1339: '' },\n    decimals: 18,\n    symbol: 'PRL',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  fuse: {\n    address: { 56: '0x5857c96DaE9cF8511B08Cb07f85753C472D36Ea3', 1339: '' },\n    decimals: 18,\n    symbol: 'FUSE',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ertha: {\n    address: { 56: '0x62823659d09F9F9D2222058878f89437425eB261', 1339: '' },\n    decimals: 18,\n    symbol: 'ERTHA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  raca: {\n    address: { 56: '0x12BB890508c125661E03b09EC06E404bc9289040', 1339: '' },\n    decimals: 18,\n    symbol: 'RACA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  gear: {\n    address: { 56: '0xb4404DaB7C0eC48b428Cf37DeC7fb628bcC41B36', 1339: '' },\n    decimals: 18,\n    symbol: 'GEAR',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ach: {\n    address: { 56: '0xBc7d6B50616989655AfD682fb42743507003056D', 1339: '' },\n    decimals: 8,\n    symbol: 'ACH',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  btt: {\n    address: { 56: '0x352Cb5E19b12FC216548a2677bD0fce83BaE434B', 1339: '' },\n    decimals: 18,\n    symbol: 'BTT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  era: {\n    address: { 56: '0x6f9F0c4ad9Af7EbD61Ac5A1D4e0F2227F7B0E5f9', 1339: '' },\n    decimals: 18,\n    symbol: 'ERA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  fight: {\n    address: { 56: '0x4f39c3319188A723003670c3F9B9e7EF991E52F3', 1339: '' },\n    decimals: 18,\n    symbol: 'FIGHT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  loa: {\n    address: { 56: '0x94b69263FCA20119Ae817b6f783Fc0F13B02ad50', 1339: '' },\n    decimals: 18,\n    symbol: 'LOA',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  duet: {\n    address: { 56: '0x95EE03e1e2C5c4877f9A298F1C0D6c98698FAB7B', 1339: '' },\n    decimals: 18,\n    symbol: 'DUET',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  gmt: {\n    address: { 56: '0x3019BF2a2eF8040C242C9a4c5c4BD4C81678b2A1', 1339: '' },\n    decimals: 8,\n    symbol: 'GMT',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  bsw: {\n    address: { 56: '0x965F527D9159dCe6288a2219DB51fc6Eef120dD1', 1339: '' },\n    decimals: 18,\n    symbol: 'BSW',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  tem: {\n    address: { 56: '0x19e6BfC1A6e4B042Fb20531244D47E252445df01', 1339: '' },\n    decimals: 9,\n    symbol: 'TEM',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  pex: {\n    address: { 56: '0x6a0b66710567b6beb81A71F7e9466450a91a384b', 1339: '' },\n    decimals: 18,\n    symbol: 'PEX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  yel: {\n    address: { 56: '0xD3b71117E6C1558c1553305b44988cd944e97300', 1339: '' },\n    decimals: 18,\n    symbol: 'YEL',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  tinc: {\n    address: { 56: '0x05aD6E30A855BE07AfA57e08a4f30d00810a402e', 1339: '' },\n    decimals: 18,\n    symbol: 'TINC',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  happy: {\n    address: { 56: '0xF5d8A096CcCb31b9D7bcE5afE812BE23e3D4690d', 1339: '' },\n    decimals: 18,\n    symbol: 'Happy',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  wzrd: {\n    address: { 56: '0xFa40d8FC324bcdD6Bbae0e086De886c571C225d4', 1339: '' },\n    decimals: 18,\n    symbol: 'WZRD',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ceek: {\n    address: { 56: '0xe0F94Ac5462997D2BC57287Ac3a3aE4C31345D66', 1339: '' },\n    decimals: 18,\n    symbol: 'CEEK',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  abnbc: {\n    address: { 56: '0xE85aFCcDaFBE7F2B096f268e31ccE3da8dA2990A', 1339: '' },\n    decimals: 18,\n    symbol: 'aBNBc',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  ankr: {\n    address: { 56: '0xf307910A4c7bbc79691fD374889b36d8531B08e3', 1339: '' },\n    decimals: 18,\n    symbol: 'ANKR',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  gal: {\n    address: { 56: '0xe4Cc45Bb5DBDA06dB6183E8bf016569f40497Aa5', 1339: '' },\n    decimals: 18,\n    symbol: 'GAL',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  xcn: {\n    address: { 56: '0x7324c7C0d95CEBC73eEa7E85CbAac0dBdf88a05b', 1339: '' },\n    decimals: 18,\n    symbol: 'XCN',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  metis: {\n    address: { 56: '0xe552Fb52a4F19e44ef5A967632DBc320B0820639', 1339: '' },\n    decimals: 18,\n    symbol: 'Metis',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  MIX: {\n    address: { 56: '0x398f7827DcCbeFe6990478876bBF3612D93baF05', 1339: '' },\n    decimals: 18,\n    symbol: 'MIX',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n  peak: {\n    address: { 56: '0x630d98424eFe0Ea27fB1b3Ab7741907DFFEaAd78', 1339: '' },\n    decimals: 8,\n    symbol: 'PEAK',\n    projectLink: 'https://matchaswap.zilionixx.com/',\n  },\n}\n\nexport default tokens\n","import { Currency } from 'parsec-swap-sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from 'parsec-swap-sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'PSC'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from 'parsec-swap-sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { Token, TokenAmount } from 'parsec-swap-sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from 'parsec-swap-sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  farmPools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { ChainId } from 'parsec-swap-sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n  [ChainId.TESTNET]: '0x566427a195ceB38eB045a8cA66051624a699079A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getColaContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getNftContract,\n  getExchangeNftContract,\n  getNftTokenContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from 'parsec-swap-sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getColaContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNftContract(library.getSigner()), [library])\n}\n\nexport const useExchangeNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getExchangeNftContract(library.getSigner()), [library])\n}\n\nexport const useNftTokenContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNftTokenContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { Pair, Token } from 'parsec-swap-sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme as toggleThemeAction,\n} from '../actions'\nimport { serializeToken, deserializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Inv-LP', 'Inv LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport function useUserDeadline(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>();\n  const userDeadline = useSelector<AppState, AppState[\"user\"][\"userDeadline\"]>(\n    (state) => {\n      return state.user.userDeadline;\n    }\n  );\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }));\n    },\n    [dispatch]\n  );\n\n  return [userDeadline, setUserDeadline];\n}","// const PANCAKE_EXTENDED = 'http://corstest.spacegrime.finance/spacegrimeswap-extended.json'\n// const PANCAKE_TOP100 = 'http://corstest.spacegrime.finance/spacegrimeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  // PANCAKE_TOP100,\n  // PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from 'parsec-swap-sdk'\nimport { Tags, TokenInfo, TokenList } from '@zilionixx/zilionixx-token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<{\n  [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }>\n}>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@zilionixx/zilionixx-token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@zilionixx/zilionixx-token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.callStatic.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from 'parsec-swap-uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getZnxScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getZnxScanLink(hash, 'transaction', chainId)}>\n                      view on ParsecScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from 'parsec-swap-uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { MenuEntry } from 'parsec-swap-uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  // {\n  //   label: t('Home'),\n  //   icon: 'HomeIcon',\n  //   href: 'https://www.investoland.io/',\n  // },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },\n    ],\n  },\n  // {\n  //   label: t('Earning'),\n  //   icon: 'EarningIcon',\n  // },\n  {\n    label: t('Earn'),\n    icon: 'EarningIcon',\n    items: [\n      {\n        label: t('Farms'),\n        href: '/farms',\n      },\n      {\n        label: t('Pools'),\n        href: '/pools',\n      },\n    ],\n  },\n  // {\n  //   label: t('NFT Marketplace'),\n  //   icon: 'NftIcon',\n  //   href: '/marketplace',\n  // },\n  // {\n  //   label: t('Launchpad'),\n  //   icon: 'LaunchpadIcon',\n  //   href: '/launchpad-test',\n  //   // status: {\n  //   //   text: t('Win').toLocaleUpperCase(),\n  //   //   color: 'success',\n  //   // },\n  // },\n  // {\n  //   label: t('Gamification'),\n  //   icon: 'GameIcon',\n  //   href: '/gamification',\n  // },\n  // {\n  //   label: t('Payment'),\n  //   icon: 'GameIcon',\n  //   href: '/payment',\n  // },\n  // {\n  //   label: t('Info'),\n  //   icon: 'InfoIcon',\n  //   href: '/info',\n  // },\n  {\n    label: t('Contact'),\n    icon: 'InfoIcon', \n    items: [\n      // {\n      //   label: t('Overview'),\n      //   href: 'https://infoswap.investoland.io/home',\n      //   target:\"_blank\"\n\n      // },\n      // {\n      //   label: t('Pools'),\n      //   href: 'https://infoswap.investoland.io/pairs',\n\n      // }, \n      // {\n      //   label: t('Tokens'),\n      //   href: 'https://infoswap.investoland.io/tokens',\n      // },\n    ],\n  },\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from 'parsec-swap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceColaBusd } from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceColaBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from 'parsec-swap-uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","// import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\n// const { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  // safemoon,\n  // bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from 'parsec-swap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getZnxScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getZnxScanLink(name ?? address, 'address', chainId)}>\n                  ({t('view on ParsecScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from 'parsec-swap-uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from 'parsec-swap-sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from 'parsec-swap-sdk'\nimport { Button, Text, AutoRenewIcon } from 'parsec-swap-uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                  <Text>- 0.05% towards CAKE buyback and burn</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'success'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from 'parsec-swap-sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from 'parsec-swap-uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from 'parsec-swap-sdk'\nimport { InjectedModalProps } from 'parsec-swap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Price } from 'parsec-swap-sdk'\nimport { Text, AutoRenewIcon } from 'parsec-swap-uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\nconst StyledText = styled(Text)`\n  color: ${({ theme }) => (theme.isDark ? '#D6D7E3' : '#19274B')};\n`\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <StyledText style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </StyledText>\n  )\n}\n","import React from 'react'\nimport { Token } from 'parsec-swap-sdk'\nimport { Modal, InjectedModalProps } from 'parsec-swap-uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from 'parsec-swap-sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from 'parsec-swap-sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} PSC to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient PSC balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to PSC` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from 'parsec-swap-uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from 'parsec-swap-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from 'parsec-swap-uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from 'parsec-swap-uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from 'parsec-swap-sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from 'parsec-swap-uikit'\n\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color:#ed3b8b;\n`\nconst StyledButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  background-image: linear-gradient(to left, #991cd1,#d4307a);\n  border-radius:32px;\n  color: white;\n  padding: 12px 0px;\n  width: 100%;\n  border-radius: 32px;\n  text-align: center;\n  border: 1px solid transparent;\n  font-weight: 500;\n  font-size: 17px;\n  line-height: 26px;\n  letter-spacing: 0.01em;\n  text-transform: none;\n  height: 3.3vw;\n  min-height:40px;\n  margin: 0px !important;\n  box-shadow: none;\n`\nconst StyledArrowDown = styled.div`\n    display:flex;\n    fill: #f55b5d;\n    width: 50px;\n    height:50px;\n    border-radius:50px;\n    border:0px solid red;\n    background:white; \n    justify-content:center;\n    align-items:center;\n    margin:-2vw 0 -2vw 0;\n    z-index:3;\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  // const [onPresent1] = useModal(<LogModal />)\n  return (\n    <Page>\n      <AppBody>\n        {/* <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} /> */}\n        <Wrapper style={{ marginTop: '20px' }} id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <StyledArrowDown onClick={() => {\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\n                        onSwitchTokens()\n                      }}> \n                    <img src =\"/repeat.png\" alt = \"\"\n            \n                      // color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                    />\n                  </StyledArrowDown>\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\" mb=\"1rem\" style={{ textAlign: 'center' }}>\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'success'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <StyledButton\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'success'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </StyledButton>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {/* {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )} */}\n    </Page>\n  )\n}\n","import { Percent } from 'parsec-swap-sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|PSC)-(0x[a-fA-F0-9]{40}|PSC)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { ZilionixxTheme } from 'parsec-swap-uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends ZilionixxTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Inter';\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n    > iframe {\n      display: none;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import React, { lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from 'parsec-swap-uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport Footer from 'components/Menu/Footer'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\nimport GlobalStyle from './style/Global'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Earning = lazy(() => import('./views/EarningFarms'))\nconst EarningWalletConnected = lazy(() => import('./views/EarningFarms/EarningWalletConnected'))\n\nconst EarningPools = lazy(() => import('./views/EarningPools'))\nconst EarningWalletConnectedPools = lazy(() => import('./views/EarningPools/EarningWalletConnected'))\n\n// MarketPlace\nconst MarketPlace = lazy(() => import('./views/MarketPlace'))\nconst NFTMyArtworks = lazy(() => import('./views/MarketPlace/NFTMyArtworks'))\nconst MintArtworks = lazy(() => import('./views/MarketPlace/MintArtworks'))\nconst NFTMyArtworksNoWalletConnect = lazy(() => import('./views/MarketPlace/NFTMyArtworksNoWalletConnect'))\n\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Launch = lazy(() => import('./views/Launched'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst ComingSoon = lazy(() => import('./views/ComingSoon'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst NFTManage = lazy(() => import('./views/NFTManage'))\nconst Payment = lazy(() => import('./views/Payment/Payment'))\nconst Info = lazy(() => import('./views/Info'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            {/* <Route path=\"/\" exact>\n              <Home />\n            </Route> */}\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Earning />\n              {/* <Farms /> */}\n            </Route>\n            <Route path=\"/launchpad\">\n              <Launch />\n            </Route>\n            <Route path=\"/pools\">\n              <EarningPools />\n              {/* <Pools /> */}\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n            <Route path=\"/earning\">\n              <Earning />\n            </Route>\n            <Route path=\"/earningwalletconnected\">\n              <EarningWalletConnected />\n            </Route>\n            <Route path=\"/marketplace\">\n              <MarketPlace />\n            </Route>\n            <Route path=\"/myartwork\">\n              <NFTMyArtworksNoWalletConnect />\n            </Route>\n            <Route path=\"/payment\">\n              <Payment />\n            </Route>\n            <Route path=\"/artworks\">\n              <NFTMyArtworks />\n            </Route>\n            <Route path=\"/mintartworks\">\n              <MintArtworks />\n            </Route>\n            <Route path=\"/info\">\n              <Info />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/pool\" component={Liquidity} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            {/* <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route> */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            <Route path=\"/\" exact>\n              <Redirect to=\"/swap\" />\n            </Route>\n            <Route exact strict path=\"/nftmanage\" component={NFTManage} />\n\n            {/* 404 */}\n            {/* <Route exact strict path=\"/overview-info\" component={ComingSoon} />\n            <Route exact strict path=\"/pools-info\" component={ComingSoon} />\n            <Route exact strict path=\"/tokens-info\" component={ComingSoon} /> */}\n            {/* <Route component={NotFound} /> */}\n          </Switch>\n        </SuspenseWithChunkError>\n        {/* <Footer /> */}\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from 'parsec-swap-uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={dark} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","export default {\n  masterChef: {\n    1339: '0x9df8823c830f1b6dF698aDDe3b373d7e4ca963f4',\n    56: '0xc32dD2f77E114e97C9be12B181b0E8eF960cEA42',\n  },\n  masterChefV1: {\n    1339: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  exchangeNFT: {\n    1339: '0xC81033E1B74b5fe4CA930e3e0F6Ff5F09183222C',\n    56: '0x1269a79f96E05fF6Ec469665087B7414F37F9902',\n  },\n  nftToken: {\n    1339: '0x0AE36fb22991E6b10D7aB199bEe7f43edEB3230F',\n    56: '0x88ffe24ee7e438cEB26C7Effe5D76dB52C6af442',\n  },\n  originalNFT: {\n    1339: '0x0AE36fb22991E6b10D7aB199bEe7f43edEB3230F',\n    56: '0x88ffe24ee7e438cEB26C7Effe5D76dB52C6af442',\n  },\n  sousChef: {\n    1339: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    1339: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0x545473db1b39c19B07614aDF3be7bAA0b4DE3D6D',\n    1339: '0x566427a195ceB38eB045a8cA66051624a699079A',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    1339: '0x00F40F0014713f527E3e9ABa89aB45adaD0DfCe1',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    1339: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    1339: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    1339: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    1339: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    1339: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    1339: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    1339: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    1339: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    1339: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    1339: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    1339: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    1339: '',\n  },\n}","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from 'parsec-swap-sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 PSC and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  // {\n  //   sousId: 1,\n  //   stakingToken: tokens.mos,\n  //   earningToken: tokens.busd,\n  //   contractAddress: {\n  //     1339: '0xbcDeC49AA67E395a5a7b4f4b9e345865E5902639',\n  //     56: '0x36906B717b8FC162Dab884Dbe7d6f21557aa556e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01331',\n  //   sortOrder: 1,\n  //   isFinished: false,\n  // },\n  {\n    sousId: 2,\n    stakingToken: tokens.busd,\n    earningToken: tokens.usdt,\n    contractAddress: {\n      1339:'0x35aFc743dFf2e5470CDCac823EcA5FC121E30e1a',\n      56: '0xdc9a713ec043e58282460af4d02188bf5c5a0191',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01331',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  // {\n  //   sousId: 6,\n  //   stakingToken: tokens.mos,\n  //   earningToken: tokens.mos,\n  //   contractAddress: {\n  //     1339: '0x59f380a0a2a700c3a9f1220df8f2c5710737d113',\n  //     56: '0x36906B717b8FC162Dab884Dbe7d6f21557aa556e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01331',\n  //   sortOrder: 1,\n  //   isFinished: false,\n  // },\n]\n\nexport default pools\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  // {\n  //   sousId: 2,\n  //   stakingToken: tokens.busdInvLP,\n  //   earningToken: tokens.mos,\n  //   contractAddress: {\n  //     1339: '0xFc0196C0Fc3Ec71e28b950E04fd1EEDF894b2793',\n  //     56: '0x36906B717b8FC162Dab884Dbe7d6f21557aa556e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01331',\n  //   sortOrder: 1,\n  //   isFinished: false,\n  // },\n]\n\nexport default pools\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from 'parsec-swap-sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent PSC balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  console.log(\"herherher,\",multicallContract)\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n// export const simpleRpcProvider = true\n\nexport default null\n"],"sourceRoot":""}